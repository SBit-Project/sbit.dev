"use strict";(self.webpackChunksbit_website=self.webpackChunksbit_website||[]).push([[6306],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return k}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),k=l,u=m["".concat(s,".").concat(k)]||m[k]||c[k]||r;return n?a.createElement(u,i(i({ref:t},d),{},{components:n})):a.createElement(u,i({ref:t},d))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7836:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],o={title:"RPC Calls",description:"A full list of all the ETH-RPC calls that are supported by Janus, as well as calls unique to Janus"},s=void 0,p={unversionedId:"Tools/Janus/rpc-calls",id:"Tools/Janus/rpc-calls",title:"RPC Calls",description:"A full list of all the ETH-RPC calls that are supported by Janus, as well as calls unique to Janus",source:"@site/docs/Tools/Janus/rpc-calls.md",sourceDirName:"Tools/Janus",slug:"/Tools/Janus/rpc-calls",permalink:"/sbit.dev/docs/Tools/Janus/rpc-calls",draft:!1,tags:[],version:"current",frontMatter:{title:"RPC Calls",description:"A full list of all the ETH-RPC calls that are supported by Janus, as well as calls unique to Janus"},sidebar:"tutorialSidebar",previous:{title:"Metamask",permalink:"/sbit.dev/docs/Tools/Janus/metamask"},next:{title:"Supported Libraries and Applications",permalink:"/sbit.dev/docs/Tools/Janus/supported-libraries-and-applications"}},d={},c=[{value:"JSON-RPC Endpoint",id:"json-rpc-endpoint",level:2},{value:"JSON-RPC Support",id:"json-rpc-support",level:2},{value:"The default block parameter",id:"the-default-block-parameter",level:2},{value:"Methods not yet supported",id:"methods-not-yet-supported",level:2},{value:"Supported JSON-RPC methods",id:"supported-json-rpc-methods",level:2},{value:"ETH methods",id:"eth-methods",level:3},{value:"Janus methods",id:"janus-methods",level:3},{value:"RPC Errors",id:"rpc-errors",level:3},{value:"JSON RPC API Reference",id:"json-rpc-api-reference",level:2},{value:"ETH Methods",id:"eth-methods-1",level:2},{value:"web3_clientVersion",id:"web3_clientversion",level:3},{value:"web3_sha3",id:"web3_sha3",level:3},{value:"net_version",id:"net_version",level:3},{value:"net_listening",id:"net_listening",level:3},{value:"net_<strong>peerCount</strong>",id:"net_peercount",level:3},{value:"eth_mining",id:"eth_mining",level:3},{value:"eth_hashrate",id:"eth_hashrate",level:3},{value:"eth_gasPrice",id:"eth_gasprice",level:3},{value:"eth_accounts",id:"eth_accounts",level:3},{value:"eth_blockNumber",id:"eth_blocknumber",level:3},{value:"eth_getBalance",id:"eth_getbalance",level:3},{value:"eth_getStorageAt",id:"eth_getstorageat",level:3},{value:"eth_getTransactionCount",id:"eth_gettransactioncount",level:3},{value:"eth_getCode",id:"eth_getcode",level:3},{value:"eth_sign",id:"eth_sign",level:3},{value:"eth_signTransaction",id:"eth_signtransaction",level:3},{value:"eth_sendTransaction",id:"eth_sendtransaction",level:3},{value:"eth_sendRawTransaction",id:"eth_sendrawtransaction",level:3},{value:"eth_call",id:"eth_call",level:3},{value:"eth_estimateGas",id:"eth_estimategas",level:3},{value:"eth_getBlockByHash",id:"eth_getblockbyhash",level:3},{value:"eth_getTransactionByHash",id:"eth_gettransactionbyhash",level:3},{value:"eth_getTransactionByBlockHashAndIndex",id:"eth_gettransactionbyblockhashandindex",level:3},{value:"eth_getTransactionBy<strong>BlockNumberAndIndex</strong>",id:"eth_gettransactionbyblocknumberandindex",level:3},{value:"eth_getTransactionReceipt",id:"eth_gettransactionreceipt",level:3},{value:"eth_getUnlceByBlockHashAndIndex",id:"eth_getunlcebyblockhashandindex",level:3},{value:"eth_getCompilers",id:"eth_getcompilers",level:3},{value:"eth_newFilter",id:"eth_newfilter",level:3},{value:"eth_newBlockFilter",id:"eth_newblockfilter",level:3},{value:"eth_uninstallFilter",id:"eth_uninstallfilter",level:3},{value:"eth_getFilterChanges",id:"eth_getfilterchanges",level:3},{value:"eth_getFilterLogs",id:"eth_getfilterlogs",level:3},{value:"eth_getLogs",id:"eth_getlogs",level:3},{value:"Janus methods",id:"janus-methods-1",level:2},{value:"sbit_getUTXOs",id:"sbit_getutxos",level:3}],m={toc:c};function k(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"json-rpc-endpoint"},"JSON-RPC Endpoint"),(0,r.kt)("p",null,"Default endpoints for Janus:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"http://localhost: - Docker endpoint"),(0,r.kt)("li",{parentName:"ul"},"http://localhost:22401 - Local endpoint for ",(0,r.kt)("inlineCode",{parentName:"li"},"make run-janus"))),(0,r.kt)("h2",{id:"json-rpc-support"},"JSON-RPC Support"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"}),(0,r.kt)("th",{parentName:"tr",align:"left"},"Supported"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"JSON-RPC 2.0"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Batch requests"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u274c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"HTTP"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u2705")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"IPC"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u274c")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"WS"),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u274c")))),(0,r.kt)("h2",{id:"the-default-block-parameter"},"The default block parameter"),(0,r.kt)("p",null,"Similar to the ETH RPC calls, the following "),(0,r.kt)("p",null,"methods have an extra default block parameter:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"eth","_","getBalance"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getCode"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getTransactionCount"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getStorageAt"),(0,r.kt)("li",{parentName:"ul"},"eth","_","call")),(0,r.kt)("p",null,"When requests are made that act on the state of sbit, the last default block parameter determines the height of the block."),(0,r.kt)("p",null,"The following options are possible for the defaultBlock parameter:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HEX String")," - an integer block number"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'String "earliest"')," for the earliest/genesis block"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'String "latest"')," - for the latest mined block"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'String "pending"')," - for the pending state/transactions")),(0,r.kt)("h2",{id:"methods-not-yet-supported"},"Methods not yet supported"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"eth","_","protocolVersion"),(0,r.kt)("li",{parentName:"ul"},"eth","_","syncing"),(0,r.kt)("li",{parentName:"ul"},"eth","_","coinbase")),(0,r.kt)("h2",{id:"supported-json-rpc-methods"},"Supported JSON-RPC methods"),(0,r.kt)("h3",{id:"eth-methods"},"ETH methods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"web3","_","clientVersion"),(0,r.kt)("li",{parentName:"ul"},"web3","_","sha3"),(0,r.kt)("li",{parentName:"ul"},"net","_","version"),(0,r.kt)("li",{parentName:"ul"},"net","_","listening"),(0,r.kt)("li",{parentName:"ul"},"net","_","peerCount"),(0,r.kt)("li",{parentName:"ul"},"eth","_","chainId"),(0,r.kt)("li",{parentName:"ul"},"eth","_","mining"),(0,r.kt)("li",{parentName:"ul"},"eth","_","hashrate"),(0,r.kt)("li",{parentName:"ul"},"eth","_","gasPrice"),(0,r.kt)("li",{parentName:"ul"},"eth","_","accounts"),(0,r.kt)("li",{parentName:"ul"},"eth","_","blockNumber"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getBalance"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getStorageAt"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getTransactionCount"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getCode"),(0,r.kt)("li",{parentName:"ul"},"eth","_","sign"),(0,r.kt)("li",{parentName:"ul"},"eth","_","signTransaction"),(0,r.kt)("li",{parentName:"ul"},"eth","_","sendTransaction"),(0,r.kt)("li",{parentName:"ul"},"eth","_","sendRawTransaction"),(0,r.kt)("li",{parentName:"ul"},"eth","_","call"),(0,r.kt)("li",{parentName:"ul"},"eth","_","estimateGas"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getBlockByHash"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getBlockByNumber"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getTransactionByHash"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getTransactionByBlockHashAndIndex"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getTransactionByBlockNumberAndIndex"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getTransactionReceipt"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getUncleByBlockHashAndIndex"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getCompilers"),(0,r.kt)("li",{parentName:"ul"},"eth","_","newFilter"),(0,r.kt)("li",{parentName:"ul"},"eth","_","newBlockFilter"),(0,r.kt)("li",{parentName:"ul"},"eth","_","uninstallFilter"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getFilterChanges"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getFilterLogs"),(0,r.kt)("li",{parentName:"ul"},"eth","_","getLogs")),(0,r.kt)("h3",{id:"janus-methods"},"Janus methods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"sbit","_","getUTXOs")),(0,r.kt)("h3",{id:"rpc-errors"},"RPC Errors"),(0,r.kt)("p",null,"The JSON response for an RPC error have the following structure:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Code")," an int for the code number"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Message")," a string with a message for the reason behind the error")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'curl --header \'Content-Type: application/json\' --data \\\n\'{"jsonrpc":"3.0","method":"sbit_getUTXOs","params":,"id":10}\' \\\n\'http://localhost:\'\n\n// Calling with params not being set to an empty array casues an error\n{\n    "code": 100,\n    "message": "json decoder issue: invalid character \',\' looking for beginning of value"\n}\n')),(0,r.kt)("h2",{id:"json-rpc-api-reference"},"JSON RPC API Reference"),(0,r.kt)("h2",{id:"eth-methods-1"},"ETH Methods"),(0,r.kt)("h3",{id:"web3_clientversion"},"web3","_","clientVersion"),(0,r.kt)("p",null,"Returns the current client version"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters ",(0,r.kt)("inlineCode",{parentName:"strong"},"None"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"String")),"- The current client version")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "SBIT ETHTestRPC/ethereum-js"\n}\n')),(0,r.kt)("h3",{id:"web3_sha3"},"web3","_","sha3"),(0,r.kt)("p",null,"Returns Keccak-256 ","(","not the standardized SHA3-256",")"," of the given data"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"DATA")," -")," the data to convert into a SHA3 hash")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [\n  "0x68656c6c6f20776f726c64"\n]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"DATA"))," - The SHA3 result of the given string")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"web3_sha3","params":["0x68656c6c6f20776f726c64"],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad"\n}\n')),(0,r.kt)("h3",{id:"net_version"},"net","_","version"),(0,r.kt)("p",null,"Returns the current network id."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"NONE")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"String")," - current network id.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"81")," Mainnet "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"113")," Regtest")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"net_version","params":[],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "813"\n}\n')),(0,r.kt)("h3",{id:"net_listening"},"net","_","listening"),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if client is actively listening for network connections"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"NONE")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Boolean")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," when listening, ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," otherwise")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"net_listening","params":[],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": true\n}\n')),(0,r.kt)("h3",{id:"net_peercount"},"net","_",(0,r.kt)("strong",{parentName:"h3"},"peerCount")),(0,r.kt)("p",null,"Returns number of peers currently  connected to the client."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"NONE")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Quantity")," - integer of the number of connected peers.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"net_peerCount","params":[],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0x2" //2\n}\n')),(0,r.kt)("h3",{id:"eth_mining"},"eth","_","mining"),(0,r.kt)("p",null,"Returns ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if the wallet is ",(0,r.kt)("strong",{parentName:"p"},"staking sbit")," or not"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"NONE")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Boolean")," - returns ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," if the wallet is staking, ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," otherwise.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_mining","params":[],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": true //2\n}\n')),(0,r.kt)("h3",{id:"eth_hashrate"},"eth","_","hashrate"),(0,r.kt)("p",null,"Returns the wallet's current staking difficulty, it ",(0,r.kt)("strong",{parentName:"p"},"does not")," return a hash rate."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"NONE")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Difficulty")," - hex representing the float64 value for the wallet's staking difficulty")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_hashrate","params":[],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0x3dffffe03fffc081" //1.99806\n}\n')),(0,r.kt)("h3",{id:"eth_gasprice"},"eth","_","gasPrice"),(0,r.kt)("p",null,"Returns the SBIT amount per gas unit."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"NONE")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Quantity")," - hex representing the SBIT amount per gas unit")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_gasPrice","params":[],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0x28" //Minimum gas price\n}\n')),(0,r.kt)("h3",{id:"eth_accounts"},"eth","_","accounts"),(0,r.kt)("p",null,"Returns a list of the hex addresses corresponding to the base58 SBIT addresses owned by the wallet"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"NONE")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Array of DATA")," - 20 Bytes - hex address representation of base58 address owned by wallet")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_accounts","params":[],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": [\n    "0x7926223070547d2d15b2ef5e7383e541c338ffe9",\n    "0x2352be3db3177f0a07efbe6da5857615b8c9901d",\n    "0x69b004ac2b3993bf2fdf56b02746a1f57997420d",\n    "0x8c647515f03daeefd09872d7530fa8d8450f069a",\n    "0x2191744eb5ebeac90e523a817b77a83a0058003b",\n    "0x88b0bf4b301c21f8a47be2188bad6467ad556dcf"\n  ] \n}\n')),(0,r.kt)("h3",{id:"eth_blocknumber"},"eth","_","blockNumber"),(0,r.kt)("p",null,"Returns the number of the most recent block"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"NONE")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Quantity")," - integer of the current block number the client is on")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0x4b7" // 1207\n}\n')),(0,r.kt)("h3",{id:"eth_getbalance"},"eth","_","getBalance"),(0,r.kt)("p",null,"Returns the balance of the account of a given address"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE: Balances are represented in satoshis, in other words:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"1 SBIT = 10 ^ 8 Satoshi"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"Data"))," 20 Bytes- address to check for balance"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," , ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"')," , see the ",(0,r.kt)("a",{parentName:"li",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#the-default-block-parameter"},"default block parameter")," for more info.","|")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE: The SBIT RPC calls used in Janus for translation do not make use of the block parameter, so including it in this call won't affect the return value as it will always return the most current indexed balance.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"params: [\n   '0x7926223070547d2d15b2ef5e',\n   'latest'\n]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - uint64 encoded hex of the current balance of the address in satoshis")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getBalance","params": ["0x7926223070547d2d15b2ef5e"],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0x2387adc5a6ae00" // 10000804600000000 satoshis or 10,000,804.6 SBIT\n}\n')),(0,r.kt)("h3",{id:"eth_getstorageat"},"eth","_","getStorageAt"),(0,r.kt)("p",null,"Returns the value from a storage position at a given address."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"Data"))," 20 bytes - address of the storage"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the position in the storage"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," , ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"')," , see the ",(0,r.kt)("a",{parentName:"li",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#the-default-block-parameter"},"default block parameter")," for more info.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - the value at this storage position.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("p",null,"Example taken from ETH RPC page ","(",(0,r.kt)("a",{parentName:"p",href:"https://eth.wiki/json-rpc/API"},"https://eth.wiki/json-rpc/API"),")",":"),(0,r.kt)("p",null,"Calculating the correct position depends on the storage to retrieve. Consider the following contract deployed at ",(0,r.kt)("inlineCode",{parentName:"p"},"0x295a70b2de5e3953354a6a8344e616ed314d7251")," by address ",(0,r.kt)("inlineCode",{parentName:"p"},"0x391694e7e0b0cce554cb130d723a9d27458f9298"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"contract Storage {\n    uint pos0;\n    mapping(address => uint) pos1;\n\n    function Storage() {\n        pos0 = 1234;\n        pos1[msg.sender] = 5678;\n    }\n}\n")),(0,r.kt)("p",null,"Retrieving the value of pos0 is straight forward:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'$ curl --header \'Content-Type: application/json\' --data \\\n  \'{"jsonrpc":"2.0", "method": "eth_getStorageAt", "params": ["0x295a70b2de5e3953354a6a8344e616ed314d7251", "0x0", "latest"], "id": 1}\'\n  \'http://localhost:\'\n  \n{"jsonrpc":"2.0","id":1,"result":"0x00000000000000000000000000000000000000000000000000000000000004d2"}\n')),(0,r.kt)("p",null,"Retrieving an element of the map is harder. The position of an element in the map is calculated with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"keccack(LeftPad32(key, 0), LeftPad32(map position, 0))\n")),(0,r.kt)("p",null,"This means to retrieve the storage on pos1","[","\u201c0x391694e7e0b0cce554cb130d723a9d27458f9298\u201d","]"," we need to calculate the position with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'keccak(decodeHex("000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298" + "0000000000000000000000000000000000000000000000000000000000000001"))\n')),(0,r.kt)("p",null,"The web3 library can be used to make the calculation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'> var key = "000000000000000000000000391694e7e0b0cce554cb130d723a9d27458f9298" + "0000000000000000000000000000000000000000000000000000000000000001"\nundefined\n> web3.sha3(key, {"encoding": "hex"})\n"0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9"\n')),(0,r.kt)("p",null,"Now to fetch the storage:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0", "method": "eth_getStorageAt", "params": ["0x295a70b2de5e3953354a6a8344e616ed314d7251", "0x6661e9d6d8b923d5bbaab1b96e1dd51ff6ea2a93520fdc9eb75d059238b8c5e9", "latest"], "id": 1}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0x000000000000000000000000000000000000000000000000000000000000162e"\n}\n')),(0,r.kt)("h3",{id:"eth_gettransactioncount"},"eth","_","getTransactionCount"),(0,r.kt)("p",null,"Returns a default value of ",(0,r.kt)("inlineCode",{parentName:"p"},"0x1")," "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:"),"  This call is set to a default value because SBIT does not use a nonce to determine the transaction count."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"Data"))," 20 Bytes- address."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," , ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"')," , see the ",(0,r.kt)("a",{parentName:"li",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#the-default-block-parameter"},"default block parameter")," for more info.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"params: [\n   '0x7926223070547d2d15b2ef5e',\n   'latest'\n]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - will always return 0x1")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getTransactionCount","params": ["0x7926223070547d2d15b2ef5e"],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0x1" //Default value\n}\n')),(0,r.kt)("h3",{id:"eth_getcode"},"eth","_","getCode"),(0,r.kt)("p",null,"Returns a code at a given address"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"Data"))," 20 Bytes- address."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," , ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"')," , see the ",(0,r.kt)("a",{parentName:"li",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#the-default-block-parameter"},"default block parameter")," for more info.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"params: [\n   '0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b',\n   '0x2'\n]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - the code from the given address")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getCode","params": ["0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b", "0x2"],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0x600160008035811a818181146012578301005b601b6001356025565b8060005260206000f25b600060078202905091905056" \n}\n')),(0,r.kt)("h3",{id:"eth_sign"},"eth","_","sign"),(0,r.kt)("p",null,"The sign method calculates an Ethereum specific signature with: ",(0,r.kt)("inlineCode",{parentName:"p"},'sign(keccak256("\\x19Ethereum Signed Message:\\n" + len(message) + message)))'),"."),(0,r.kt)("p",null,"By adding a prefix to the message makes the calculated signature recognizable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data ","(","e.g. transaction",")"," and use the signature to impersonate the victim."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note")," the address to sign with must be unlocked."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"Data"))," 20 Bytes- address."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"Data"))," N Bytes - message to sign")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [\n    "0x9b2055d370f73ec7d8a03e965129118dc8f5bf83", \n    "0xdeadbeaf"\n]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - Signature")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_sign","params": ["0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b", "0x2"],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0xa3f20717a250c2b0b729b7e5becbff67fdaef7e0699da4de7ca5895b02a170a12d887fd3b17bfdce3481f10bea41f45ba9f709d39ce8325427b57afcfc994cee1b" \n}\n')),(0,r.kt)("h3",{id:"eth_signtransaction"},"eth","_","signTransaction"),(0,r.kt)("p",null,"Signs a transaction that can be submitted to the network at a later time using eth","_","sendRawTransaction"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Object")," - The transaction object",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 20 Bytes - The address the transaction is sent from."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"to:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 20 Bytes - ","(","optional when creating a new contract",")"," The address the transaction is directed to"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," ","(","optional, default: TBD",")"," Integer of the gas provided for the transaction execution. It will return unused gas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasPrice:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," ","(","optional, default: TBD",")"," Integer of the gasPrice used for each paid gas in SBIT"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - ","(","optional",")"," Integer of the value sent with this transaction, in Wei."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - The compiled code of a contract OR the hash of the invoked method signature and encoded parameters. For more details see ",(0,r.kt)("a",{parentName:"li",href:"https://docs.soliditylang.org/en/v0.8.4/abi-spec.html"},"Ethereum ABI Specification"),".")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," This call does not have the nonce option, given that nonces are not used in SBIT."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'"params": [{\n        "data": "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675",\n        "from": "0xb60e8dd61c5d32be8058bb8eb970870f07233155",\n        "gas": "0x76c0",\n        "gasPrice": "0x9184e72a000",\n        "to": "0xd46e8dd67c5d32be8058bb8eb970870f07244567",\n        "value": "0x9184e72a"\n}]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - Signature")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_signTransaction",\n "params": [{\n        "data": "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675",\n        "from": "0xb60e8dd61c5d32be8058bb8eb970870f07233155",\n        "gas": "0x76c0",\n        "gasPrice": "0x9184e72a000",\n        "to": "0xd46e8dd67c5d32be8058bb8eb970870f07244567",\n        "value": "0x9184e72a"\n }],\n "id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0xa3f20717a250c2b0b729b7e5becbff67fdaef7e0699da4de7ca5895b02a170a12d887fd3b17bfdce3481f10bea41f45ba9f709d39ce8325427b57afcfc994cee1b" \n}\n')),(0,r.kt)("h3",{id:"eth_sendtransaction"},"eth","_","sendTransaction"),(0,r.kt)("p",null,"Creates a new message call transaction or contract creation, if the data field contains code."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Object")," - The transaction object",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 20 Bytes - The address the transaction is sent from."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"to:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 20 Bytes - ","(","optional when creating a new contract",")"," The address the transaction is directed to"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," ","(","optional, default: TBD",")"," Integer of the gas provided for the transaction execution. It will return unused gas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasPrice:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," ","(","optional, default: TBD",")"," Integer of the gasPrice used for each paid gas in SBIT"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - ","(","optional",")"," Integer of the value sent with this transaction, in Wei."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - The compiled code of a contract OR the hash of the invoked method signature and encoded parameters. For more details see ",(0,r.kt)("a",{parentName:"li",href:"https://docs.soliditylang.org/en/v0.8.4/abi-spec.html"},"Ethereum ABI Specification"),".")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," This call does not have the nonce option, given that nonces are not used in SBIT."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [{\n  "from": "0xb60e8dd61c5d32be8058bb8eb970870f07233155",\n  "to": "0xd46e8dd67c5d32be8058bb8eb970870f07244567",\n  "gas": "0x76c0", // 30400\n  "gasPrice": "0x9184e72a000", // 10000000000000\n  "value": "0x9184e72a", // 2441406250\n  "data": "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"\n}]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - Signature")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_sendTransaction",\n "params": [{\n  "from": "0xb60e8dd61c5d32be8058bb8eb970870f07233155",\n  "to": "0xd46e8dd67c5d32be8058bb8eb970870f07244567",\n  "gas": "0x76c0", // 30400\n  "gasPrice": "0x9184e72a000", // 10000000000000\n  "value": "0x9184e72a", // 2441406250\n  "data": "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"\n}],\n "id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331" \n}\n')),(0,r.kt)("h3",{id:"eth_sendrawtransaction"},"eth","_","sendRawTransaction"),(0,r.kt)("p",null,"Creates a new message call transaction or a contract creation for signed transactions."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," The signed transaction data")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," This call does not have the nonce option, given that nonces are not used in SBIT."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: ["0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - 32 Bytes - the transaction hash, or the zero hash if the transaction is not yet available.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:"),"  Use ",(0,r.kt)("a",{parentName:"p",href:"https://eth.wiki/json-rpc/API#eth_gettransactionreceipt"},"eth","_","getTransactionReceipt")," to get the contract address, after the transaction was mined, when you created a contract."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_sendRawTransaction",\n "params": ["0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"], "id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331" \n}\n')),(0,r.kt)("h3",{id:"eth_call"},"eth","_","call"),(0,r.kt)("p",null,"Executes a new message call immediately without creating a transaction on the block chain."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Object")," - The transaction object",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 20 Bytes - The address the transaction is sent from."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"to:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 20 Bytes - ","(","optional when creating a new contract",")"," The address the transaction is directed to"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," ","(","optional, default: TBD",")"," Integer of the gas provided for the transaction execution. It will return unused gas."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasPrice:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," ","(","optional, default: TBD",")"," Integer of the gasPrice used for each paid gas in SBIT"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - ","(","optional",")"," Integer of the value sent with this transaction, in Wei."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - The compiled code of a contract OR the hash of the invoked method signature and encoded parameters. For more details see ",(0,r.kt)("a",{parentName:"li",href:"https://docs.soliditylang.org/en/v0.8.4/abi-spec.html"},"Ethereum ABI Specification"),"."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),", see the ",(0,r.kt)("a",{parentName:"li",href:"https://eth.wiki/json-rpc/API#the-default-block-parameter"},"default block parameter"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," This call does not have the nonce option, given that nonces are not used in SBIT."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - the return value of executed contract")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_call","params": [{see above}],"id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "{ReturnValueInHex}" \n}\n')),(0,r.kt)("h3",{id:"eth_estimategas"},"eth","_","estimateGas"),(0,r.kt)("p",null,"Generates and returns an estimate of how much gas is necessary to allow the transaction to complete. The transaction will not be added to the blockchain. Note that the estimate may be significantly more than the amount of gas actually used by the transaction, for a variety of reasons including EVM mechanics and node performance."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"See ",(0,r.kt)("a",{parentName:"li",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_call"},"eth","_","call parameters"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," the amount of gas used ")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_estimateGas","params": [{seeabove}], "id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": "0x5208" // 21000\n}\n')),(0,r.kt)("h3",{id:"eth_getblockbyhash"},"eth","_","getBlockByHash"),(0,r.kt)("p",null,"Returns information about a block by hash."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 32 Bytes - Hash of a block"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Boolean")," If true it returns the full transaction objects, if ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," only the hashes of the transactions.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"params: [\n   '0xdc0818cf78f21a8e70579cb46a43643f78291264dda342ae31049421c82d21ae',\n   false\n]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - A block object, or ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," when no block was found:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"number"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the block number. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"hash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the block. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"parentHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the parent block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nonce"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 8 Bytes - hash of the generated proof-of-work. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sha3Uncles"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - SHA3 of the uncles data in the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"logsBloom"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 256 Bytes - the bloom filter for the logs of the block. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionsRoot"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - the root of the transaction trie of the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stateRoot"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - the root of the final state trie of the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"receiptsRoot"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - the root of the receipts trie of the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"miner"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 20 Bytes - the address of the beneficiary to whom the mining rewards were given."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"difficulty"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the difficulty for this block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"totalDifficulty"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the total difficulty of the chain until this block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"extraData"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - the \u201cextra data\u201d field of this block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"size"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer the size of this block in bytes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasLimit"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the maximum gas allowed in this block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasUsed"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the total used gas by all transactions in this block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"timestamp"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the unix timestamp for when the block was collated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactions"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Array")," - Array of transaction objects, or 32 Bytes transaction hashes depending on the last given parameter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uncles"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Array")," - Array of uncle hashes.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getBlockByHash","params": ["0xdc0818cf78f21a8e70579cb46a43643f78291264dda342ae31049421c82d21ae", false], "id":10}\' \\\n  \'http://localhost:\'\n\n// Result\n{\n  "jsonrpc": "2.0",\n  "id": 10,\n  "result": {\n    "difficulty": "0x4ea3f27bc",\n    "extraData": "0x476574682f4c5649562f76312e302e302f6c696e75782f676f312e342e32",\n    "gasLimit": "0x1388",\n    "gasUsed": "0x0",\n    "hash": "0xdc0818cf78f21a8e70579cb46a43643f78291264dda342ae31049421c82d21ae",\n    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",\n    "miner": "0xbb7b8287f3f0a933474a79eae42cbca977791171",\n    "mixHash": "0x4fffe9ae21f1c9e15207b1f472d5bbdd68c9595d461666602f2be20daf5e7843",\n    "nonce": "0x689056015818adbe",\n    "number": "0x1b4",\n    "parentHash": "0xe99e022112df268087ea7eafaf4790497fd21dbeeb6bd7a1721df161a6657a54",\n    "receiptsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",\n    "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",\n    "size": "0x220",\n    "stateRoot": "0xddc8b0234c2e0cad087c8b389aa7ef01f7d79b2570bccb77ce48648aa61c904d",\n    "timestamp": "0x55ba467c",\n    "totalDifficulty": "0x78ed983323d",\n    "transactions": [\n    ],\n    "transactionsRoot": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",\n    "uncles": [\n    ]\n  }\n')),(0,r.kt)("h3",{id:"eth_gettransactionbyhash"},"eth","_","getTransactionByHash"),(0,r.kt)("p",null,"Returns the information about a transaction requested by transaction hash."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 32 Bytes - hash of a transaction.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [\n   "0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b"\n]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - A transaction object, or ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," when no transaction was found:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the block where this transaction was in. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockNumber"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - block number where this transaction was in. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 20 Bytes - address of the sender."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gas"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - currently defaults to ",(0,r.kt)("inlineCode",{parentName:"li"},"0x")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasPrice"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - gas price provided by the sender in Wei."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"hash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"input"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - the data send along with the transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"nonce"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the number of transactions made by the sender prior to this one."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"to"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 20 Bytes - address of the receiver. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its a contract creation transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionIndex"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the transactions index position in the block. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - value transferred in SBIT")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getTransactionByHash","params": ["0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b"], "id":10}\' \\\n  \'http://localhost:\'\n  \n  // Result\n{\n  "jsonrpc":"2.0",\n  "id": 10,\n  "result":{\n    "blockHash":"0x1d59ff54b1eb26b013ce3cb5fc9dab3705b415a67127a003c3e61eb445bb8df2",\n    "blockNumber":"0x5daf3b", // 6139707\n    "from":"0xa7d9ddbe1f17865597fbd27ec712455208b6b76d",\n    "gas":"0xc350", // 50000\n    "gasPrice":"0x4a817c800", // 20000000000\n    "hash":"0x88df016429689c079f3b2f6ad39fa052532c56795b733da78a91ebe6a713944b",\n    "input":"0x68656c6c6f21",\n    "nonce":"0x15", // 21\n    "to":"0xf02c1c8e6114b1dbe8937a39260b5b0a374432bb",\n    "transactionIndex":"0x41", // 65\n    "value":"0xf3dbb76162000", // Amount in SBIT\n  }\n}\n')),(0,r.kt)("h3",{id:"eth_gettransactionbyblockhashandindex"},"eth","_","getTransactionByBlockHashAndIndex"),(0,r.kt)("p",null,"Returns information about a transaction by block hash and transaction index position."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 32 Bytes - hash of a block."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," integer of the transaction index position.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"params: [\n   '0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331',\n   '0x0' // 0\n]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_gettransactionbyhash"},"eth","_","getTransactionByHash")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getTransactionByBlockHashAndIndex","params": ["0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331", "0x0"], "id":10}\' \\\n \'http://localhost:\'\n')),(0,r.kt)("p",null,"Result see ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_gettransactionbyhash"},"eth","_","getTransactionByHash")),(0,r.kt)("h3",{id:"eth_gettransactionbyblocknumberandindex"},"eth","_","getTransactionBy",(0,r.kt)("strong",{parentName:"h3"},"BlockNumberAndIndex")),(0,r.kt)("p",null,"Returns information about a transaction by block number and transaction index position."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - integer block number, or the string ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),", see the ",(0,r.kt)("a",{parentName:"li",href:"https://eth.wiki/json-rpc/API#the-default-block-parameter"},"default block parameter")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," integer of the transaction index position.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"params: [\n   '0x29c', // 668\n   '0x0' // 0\n]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_gettransactionbyhash"},"eth","_","getTransactionByHash")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getTransactionByBlockNumberAndIndex","params": ["0x29c", "0x0"], "id":10}\' \\\n \'http://localhost:\'\n')),(0,r.kt)("p",null,"Result see ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_gettransactionbyhash"},"eth","_","getTransactionByHash")),(0,r.kt)("h3",{id:"eth_gettransactionreceipt"},"eth","_","getTransactionReceipt"),(0,r.kt)("p",null,"Returns the receipt of a transaction by transaction hash."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 32 Bytes - hash of a transaction.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [\n   "0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"\n]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Object")," - A transaction receipt object, or ",(0,r.kt)("inlineCode",{parentName:"p"},"null")," when no transaction was found:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionIndex"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY"),", integer of the transactions index position in the block"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the block where this transaction was in. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockNumber"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - block number where this transaction was in. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"from"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 20 Bytes - address of the sender."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"to"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 20 Bytes - address of the receiver. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its a contract creation transaction."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cumulativeGasUsed"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - The total amount of gas used when this transaction was executed in the block."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gasUsed"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - The amount of gas used by this specific transaction alone"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"contractAddress:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - 20 Bytes - The contract address created, if the transaction was a contract creation, otherwise ",(0,r.kt)("inlineCode",{parentName:"li"},"null")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"logs:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"Array")," - Array of log objects, which this transaction generated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"logsBloom:")," ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 256 Bytes - Bloom filter for light clients to quickly retrieve related logs. ",(0,r.kt)("strong",{parentName:"li"},"NOTE:")," Currently set to  always return ",(0,r.kt)("inlineCode",{parentName:"li"},"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"))),(0,r.kt)("p",null,"It also returns either:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"status"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," either ",(0,r.kt)("inlineCode",{parentName:"li"},"1")," ","(","success",")"," or ",(0,r.kt)("inlineCode",{parentName:"li"},"0")," ","(","failure",")")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getTransactionReceipt","params": ["0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"], "id":10}\' \\\n  \'http://localhost:\'\n  \n  // Result\n{\n  "jsonrpc":"2.0",\n  "id": 10,\n  "result": {\n     transactionHash: \'0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\',\n     transactionIndex:  \'0x1\', // 1\n     blockNumber: \'0xb\', // 11\n     blockHash: \'0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b\',\n     cumulativeGasUsed: \'0x33bc\', // 13244\n     gasUsed: \'0x4dc\', // 1244\n     contractAddress: \'0xb60e8dd61c5d32be8058bb8eb970870f07233155\', // or null, if none was created\n     logs: [{\n         // logs as returned by getFilterLogs, etc.\n     }, ...],\n     logsBloom: "0x00...0", // 256 byte bloom filter\n     status: \'0x1\'\n  }\n}\n')),(0,r.kt)("h3",{id:"eth_getunlcebyblockhashandindex"},"eth","_","getUnlceByBlockHashAndIndex"),(0,r.kt)("p",null,"Returns information about an uncle of a block by hash and uncle index position"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," 32 Bytes - Hash of a block"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," The uncle's index position")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"params: [\n   '0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b',\n   '0x0' // 0\n]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_getblockbyhash"},"eth","_","getBlockByHash")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note:")," An uncle doesn't contain individual transactions."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getUncleByBlockHashAndIndex","params": ["0xc6ef2fc5426d6ad6fd9e2a26abeab0aa2411b7ab17f30a99d3cb96aed1d1055b", "0x0"], "id":10}\' \\\n  \'http://localhost:\'\n')),(0,r.kt)("p",null,"Result see ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_getblockbyhash"},"eth","_","getBlockByHash")),(0,r.kt)("h3",{id:"eth_getcompilers"},"eth","_","getCompilers"),(0,r.kt)("p",null,"Returns a list of available compilers in the client"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters ",(0,r.kt)("inlineCode",{parentName:"strong"},"None"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Array")," Array of available compilers. ","(","Hardcoded to an empty array",")"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getCompilers","params": [], "id":10}\' \\\n  \'http://localhost:\'\n  \n// Result\n{\n  "id":10,\n  "jsonrpc": "2.0",\n  "result": []\n}\n')),(0,r.kt)("h3",{id:"eth_newfilter"},"eth","_","newFilter"),(0,r.kt)("p",null," Creates a filter object, based on filter options, to notify when the state changes ","(","logs",")",".",(0,r.kt)("br",{parentName:"p"}),"\n","To check if the state has changed, call ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_getfilterchanges"},"eth","_","getFilterChanges.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"A note on specifying topic filters:")),(0,r.kt)("p",null,"Topics are order-dependent. A transaction with a log with topics ","[","A, B","]"," will be matched by the following topic filters:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[]")," \u201canything\u201d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[A]")," \u201cA in first position ","(","and anything after",")","\u201d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[null, B]")," \u201canything in first position AND B in second position ","(","and anything after",")","\u201d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[A, B]")," \u201cA in first position AND B in second position ","(","and anything after",")","\u201d"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[[A, B], [A, B]]")," \u201c","(","A OR B",")"," in first position AND ","(","A OR B",")"," in second position ","(","and anything after",")","\u201d")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")," "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Object")," - The filter options:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fromBlock"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - ","(","optional, default: ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),")"," Integer block number, or ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," for the last mined block or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," for not yet mined transactions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"toBlock"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - ","(","optional, default: ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),")"," Integer block number, or ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," for the last mined block or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," for not yet mined transactions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"address"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA|Array"),", 20 Bytes - ","(","optional",")"," Contract address or a list of addresses from which logs should originate."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"topics"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Array of DATA"),", - ","(","optional",")"," Array of 32 Bytes ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," topics. Topics are order-dependent. Each topic can also be an array of DATA with \u201cor\u201d options.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [{\n  "fromBlock": "0x1",\n  "toBlock": "0x2",\n  "address": "0x8888f1f195afa192cfee860698584c030f4c9db1",\n  "topics": ["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b", null, ["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b", "0x0000000000000000000000000aff3454fce5edbc8cca8697c15331677e6ebccc"]]\n}]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," A filter id"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_newFilter","params":[{"topics":["0x12341234"]}], "id":10}\' \\\n  \'http://localhost:\'\n  \n// Result\n{\n  "id": 10,\n  "jsonrpc": "2.0",\n  "result": "0x1" // filter id for "topics":["0x12341234"] is 1\n}\n')),(0,r.kt)("h3",{id:"eth_newblockfilter"},"eth","_","newBlockFilter"),(0,r.kt)("p",null,"Creates a filter in the node, to notify when a new block arrives. To check if the state has changed, call ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_getfilterchanges"},"eth","_","getFilterChanges.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters ",(0,r.kt)("inlineCode",{parentName:"strong"},"None"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"QUANTITY")," A filter id"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_newBockFilter","params":[], "id":10}\' \\\n  \'http://localhost:\'\n  \n// Result\n{\n  "id": 10,\n  "jsonrpc": "2.0",\n  "result": "0x1" // block_filter id is 1\n}\n')),(0,r.kt)("h3",{id:"eth_uninstallfilter"},"eth","_","uninstallFilter"),(0,r.kt)("p",null,"Uninstalls a filter with given id. Should always be called when watch is no longer needed. Additonally Filters timeout when they aren\u2019t requested with ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_getfilterchanges"},"eth","_","getFilterChanges")," for a period of time"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," The filter id")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [\n  "0xb" // 11\n]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Boolean")," ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if the filter was successfully uninstalled, otherwise ",(0,r.kt)("inlineCode",{parentName:"p"},"false")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_uninstallFilter","params":["0xb"], "id":10}\' \\\n  \'http://localhost:\'\n  \n// Result\n{\n  "id": 10,\n  "jsonrpc": "2.0",\n  "result": true\n}\n')),(0,r.kt)("h3",{id:"eth_getfilterchanges"},"eth","_","getFilterChanges"),(0,r.kt)("p",null,"Polling method for a filter, which returns an array of logs which occurred since last poll."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," The filter id")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [\n  "0x16" // 22\n]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Array")," - Array of log objects, or an empty array if nothing has changed since last poll."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For filters created with ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_newBlockFilter")," the return are block hashes ","(",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes",")",", e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},'["0x3454645634534..."]'),"."),(0,r.kt)("li",{parentName:"ul"},"For filters created with ",(0,r.kt)("inlineCode",{parentName:"li"},"eth_newFilter")," logs are objects with following params:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"removed"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"TAG")," - ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," when the log was removed, due to a chain reorganization. ",(0,r.kt)("inlineCode",{parentName:"li"},"false")," if its a valid log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"logIndex"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the log index position in the block. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionIndex"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - integer of the transactions index position log was created from. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"transactionHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the transactions this log was created from. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockHash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - hash of the block where this log was in. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockNumber"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," - the block number where this log was in. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending. ",(0,r.kt)("inlineCode",{parentName:"li"},"null")," when its pending log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"address"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 20 Bytes - address from which this log originated."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - contains one or more 32 Bytes non-indexed arguments of the log."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"topics"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Array of DATA")," - Array of 0 to 4 32 Bytes ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," of indexed log arguments. ","(","In ",(0,r.kt)("em",{parentName:"li"},"solidity"),": The first topic is the ",(0,r.kt)("em",{parentName:"li"},"hash")," of the signature of the event ","(","e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"Deposit(address,bytes32,uint256)"),")",", except you declared the event with the ",(0,r.kt)("inlineCode",{parentName:"li"},"anonymous")," specifier.",")")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_uninstallFilter","params":["0x16"], "id":10}\' \\\n  \'http://localhost:\'\n  \n// Result\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": [{\n    "logIndex": "0x1", // 1\n    "blockNumber":"0x1b4", // 436\n    "blockHash": "0x8216c5785ac562ff41e2dcfdf5785ac562ff41e2dcfdf829c5a142f1fccd7d",\n    "transactionHash":  "0xdf829c5a142f1fccd7d8216c5785ac562ff41e2dcfdf5785ac562ff41e2dcf",\n    "transactionIndex": "0x0", // 0\n    "address": "0x16c5785ac562ff41e2dcfdf829c5a142f1fccd7d",\n    "data":"0x0000000000000000000000000000000000000000000000000000000000000000",\n    "topics": ["0x59ebeb90bc63057b6515673c3ecf9438e5058bca0f92585014eced636878c9a5"]\n    },{\n      ...\n    }]\n}\n')),(0,r.kt)("h3",{id:"eth_getfilterlogs"},"eth","_","getFilterLogs"),(0,r.kt)("p",null,"Returns an array of all logs matching filter with given id."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")," "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," The filter id")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [\n  "0x16" // 22\n]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_getfilterchanges"},"eth","_","getFilterChanges")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_getFilterLogs","params":["0x16"], "id":10}\' \\\n  \'http://localhost:\'\n')),(0,r.kt)("p",null,"Result see ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_getfilterchanges"},"eth","_","getFilterChanges")),(0,r.kt)("h3",{id:"eth_getlogs"},"eth","_","getLogs"),(0,r.kt)("p",null,"Returns an array of all logs matching a given filter object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")," "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Object")," - The filter options:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"fromBlock"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - ","(","optional, default: ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),")"," Integer block number, or ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," for the last mined block or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," for not yet mined transactions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"toBlock"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY|TAG")," - ","(","optional, default: ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"'),")"," Integer block number, or ",(0,r.kt)("inlineCode",{parentName:"li"},'"latest"')," for the last mined block or ",(0,r.kt)("inlineCode",{parentName:"li"},'"pending"'),", ",(0,r.kt)("inlineCode",{parentName:"li"},'"earliest"')," for not yet mined transactions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"address"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA|Array"),", 20 Bytes - ","(","optional",")"," Contract address or a list of addresses from which logs should originate."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"topics"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Array of DATA"),", - ","(","optional",")"," Array of 32 Bytes ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," topics. Topics are order-dependent. Each topic can also be an array of DATA with \u201cor\u201d options."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"blockhash"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"DATA"),", 32 Bytes - ","(","optional",")"," Using ",(0,r.kt)("inlineCode",{parentName:"li"},"blockHash")," is equivalent to ",(0,r.kt)("inlineCode",{parentName:"li"},"fromBlock")," = ",(0,r.kt)("inlineCode",{parentName:"li"},"toBlock")," = the block number with hash ",(0,r.kt)("inlineCode",{parentName:"li"},"blockHash"),". If ",(0,r.kt)("inlineCode",{parentName:"li"},"blockHash")," is present in in the filter criteria, then neither ",(0,r.kt)("inlineCode",{parentName:"li"},"fromBlock")," nor ",(0,r.kt)("inlineCode",{parentName:"li"},"toBlock")," are allowed.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [{\n  "topics": ["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b"]\n}]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_getfilterchanges"},"eth","_","getFilterChanges")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_uninstallFilter","params":[{"topics":["0x000000000000000000000000a94f5374fce5edbc8e2a8697c15331677e6ebf0b"]}], "id":10}\' \\\n  \'http://localhost:\'\n')),(0,r.kt)("p",null,"Return see See ",(0,r.kt)("a",{parentName:"p",href:"https://app.gitbook.com/@earl-grey-tech/s/janus-docs/~/drafts/-MYu8ax0AMrsdcYZw6US/rpc-calls#eth_getfilterchanges"},"eth","_","getFilterChanges")),(0,r.kt)("h2",{id:"janus-methods-1"},"Janus methods"),(0,r.kt)("h3",{id:"sbit_getutxos"},"sbit","_","getUTXOs"),(0,r.kt)("p",null,"Returns an array containing a set of spendable Vouts given an address and a minimum amount desire. The call will return an error if the address is not able to make up for the minimum amount with their set of UTXOs."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")," "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"DATA")," - 20 Bytes - hex address representation of base58 address owned by wallet"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"QUANTITY")," float value for ",(0,r.kt)("strong",{parentName:"li"},"minimum amount")," in SBIT, if the minimum amount is greater than the sum of all available UTXOs the call will return with an error message ",(0,r.kt)("strong",{parentName:"li"},'"required minimum amount is greater than total amount of UTXOs"'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'params: [\n "0x7926223070547d2d15b2ef5e7383e541c338ffe9",\n 10 \n]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Returns")," "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Array")," Array of JSON objects representing the gathered UTXOs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},'[                \n  {\n    "txid" : "txid",          (string) the transaction id \n    "vout" : n,               (numeric) the vout value\n  }\n  ,...\n]\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},'$ curl --header \'Content-Type: application/json\' --data \\\n \'{"jsonrpc":"2.0","method":"eth_uninstallFilter","params":["0x7926223070547d2d15b2ef5e7383e541c338ffe9", 1], "id":10}\' \\\n  \'http://localhost:\'\n  \n// Result (Assuming the vout for the txid has an amount equal to or greater than 1 SBIT\n{\n  "id":10,\n  "jsonrpc":"2.0",\n  "result": [{\n    "txid":"a54963eadaf88f0e30340c3649f426181f5c9aff3580b6a44923a1e796e3d7ff",\n    "vout":0,\n  ]\n}\n')))}k.isMDXComponent=!0}}]);