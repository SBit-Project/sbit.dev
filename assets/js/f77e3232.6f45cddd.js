"use strict";(self.webpackChunksbit_website=self.webpackChunksbit_website||[]).push([[6130],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return m}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(r),m=n,v=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return r?a.createElement(v,o(o({ref:t},d),{},{components:r})):a.createElement(v,o({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6719:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var a=r(7462),n=r(3366),i=(r(7294),r(3905)),o=["components"],l={title:"Sbitcore-Lib",description:"Sbitcore provides a reliable API for JavaScript apps that need to interface with SBIT.",keywords:["sbit","bitcoin","blockchain","ethereum","sbitcore","tools"],sidebar_position:1},s=void 0,c={unversionedId:"Tools/SBitcore-lib/SBitcore-lib",id:"Tools/SBitcore-lib/SBitcore-lib",title:"Sbitcore-Lib",description:"Sbitcore provides a reliable API for JavaScript apps that need to interface with SBIT.",source:"@site/docs/Tools/SBitcore-lib/SBitcore-lib.md",sourceDirName:"Tools/SBitcore-lib",slug:"/Tools/SBitcore-lib/",permalink:"/sbit.dev/docs/Tools/SBitcore-lib/",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Sbitcore-Lib",description:"Sbitcore provides a reliable API for JavaScript apps that need to interface with SBIT.",keywords:["sbit","bitcoin","blockchain","ethereum","sbitcore","tools"],sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Raw SRC20 Transaction implementation",permalink:"/sbit.dev/docs/Smart-Contract/Raw-SRC20-Transaction-implementation-guide"},next:{title:"SBIT Address",permalink:"/sbit.dev/docs/Tools/SBitcore-lib/address"}},d={},p=[{value:"Addresses and Key Management",id:"addresses-and-key-management",level:2},{value:"Payment Handling",id:"payment-handling",level:2},{value:"SBIT Internals",id:"sbit-internals",level:2},{value:"Extra",id:"extra",level:2},{value:"Module Development",id:"module-development",level:2},{value:"Examples",id:"examples",level:2},{value:"Create and Save a Private Key",id:"create-and-save-a-private-key",level:3},{value:"Create an Address",id:"create-an-address",level:3},{value:"Create a Multisig Address",id:"create-a-multisig-address",level:3},{value:"Request a Payment",id:"request-a-payment",level:3},{value:"Create a Transaction",id:"create-a-transaction",level:3},{value:"Connect to the Network",id:"connect-to-the-network",level:3}],u={toc:p};function m(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"SBIT is a powerful new peer-to-peer platform for the next generation of financial technology. The decentralized nature of the SBIT network allows for highly resilient SBIT infrastructure, and the developer community needs reliable, open-source tools to implement SBIT apps and services. Sbitcore provides a reliable API for JavaScript apps that need to interface with SBIT."),(0,i.kt)("h2",{id:"addresses-and-key-management"},"Addresses and Key Management"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/address"},"Addresses")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/networks"},"Using Different Networks")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/privatekey"},"Private Keys")," and ",(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/publickey"},"Public Keys")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/hierarchical"},"Hierarchically-derived Private and Public Keys"))),(0,i.kt)("h2",{id:"payment-handling"},"Payment Handling"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/unit"},"Using Different Units")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/uri"},"Acknowledging and Requesting Payments: SBIT URIs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/transaction"},"The Transaction Class"))),(0,i.kt)("h2",{id:"sbit-internals"},"SBIT Internals"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/script"},"Scripts")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/block"},"Block"))),(0,i.kt)("h2",{id:"extra"},"Extra"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/crypto"},"Crypto")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/encoding"},"Encoding"))),(0,i.kt)("h2",{id:"module-development"},"Module Development"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/SBitcore-lib/browser"},"Browser Builds"))),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"create-and-save-a-private-key"},"Create and Save a Private Key"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"var privateKey = new sbitcore.PrivateKey();\n\nvar exported = privateKey.toWIF();\n// e.g. L3T1s1TYP9oyhHpXgkyLoJFGniEgkv2Jhi138d7R2yJ9F4QdDU2m\nvar imported = sbitcore.PrivateKey.fromWIF(exported);\nvar hexa = privateKey.toString();\n// e.g. 'b9de6e778fe92aa7edb69395556f843f1dce0448350112e14906efc2a80fa61a'\n")),(0,i.kt)("h3",{id:"create-an-address"},"Create an Address"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"var address = privateKey.toAddress();\n")),(0,i.kt)("h3",{id:"create-a-multisig-address"},"Create a Multisig Address"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"// Build a 2-of-3 address from public keys\nvar p2shAddress = new sbitcore.Address([publicKey1, publicKey2, publicKey3], 2);\n")),(0,i.kt)("h3",{id:"request-a-payment"},"Request a Payment"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"var paymentInfo = {\n  address: '1DNtTk4PUCGAdiNETAzQFWZiy2fCHtGnPx',\n  amount: 120000 //satoshis\n};\nvar uri = new sbitcore.URI(paymentInfo).toString();\n")),(0,i.kt)("h3",{id:"create-a-transaction"},"Create a Transaction"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"var transaction = new Transaction()\n    .from(utxos)          // Feed information about what unspent outputs one can use\n    .to(address, amount)  // Add an output with the given amount of satoshis\n    .change(address)      // Sets up a change address where the rest of the funds will go\n    .sign(privkeySet)     // Signs all the inputs it can\n")),(0,i.kt)("h3",{id:"connect-to-the-network"},"Connect to the Network"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"var peer = new Peer('5.9.85.34');\n\npeer.on('inv', function(message) {\n  // new inventory\n});\n\npeer.connect();\n")))}m.isMDXComponent=!0}}]);