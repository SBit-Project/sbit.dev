"use strict";(self.webpackChunksbit_website=self.webpackChunksbit_website||[]).push([[9669],{3905:function(e,t,i){i.d(t,{Zo:function(){return c},kt:function(){return d}});var n=i(7294);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function a(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?a(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):a(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,n,r=function(e,t){if(null==e)return{};var i,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||(r[i]=e[i]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)i=a[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(r[i]=e[i])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(i),d=r,b=m["".concat(s,".").concat(d)]||m[d]||u[d]||a;return i?n.createElement(b,o(o({ref:t},c),{},{components:i})):n.createElement(b,o({ref:t},c))}));function d(e,t){var i=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=i.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=i[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},7580:function(e,t,i){i.r(t),i.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var n=i(7462),r=i(3366),a=(i(7294),i(3905)),o=["components"],l={title:"Shared Libraries",description:"Shared Libraries",keywords:["sbit","bitcoin","blockchain","ethereum"],sidebar_position:8},s=void 0,p={unversionedId:"SBit-Core/Development/shared-libraries",id:"SBit-Core/Development/shared-libraries",title:"Shared Libraries",description:"Shared Libraries",source:"@site/docs/SBit-Core/Development/shared-libraries.md",sourceDirName:"SBit-Core/Development",slug:"/SBit-Core/Development/shared-libraries",permalink:"/sbit.dev/docs/SBit-Core/Development/shared-libraries",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Shared Libraries",description:"Shared Libraries",keywords:["sbit","bitcoin","blockchain","ethereum"],sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Unauthenticated REST Interface",permalink:"/sbit.dev/docs/SBit-Core/Development/REST-interface"},next:{title:"SBIT Command Line Client",permalink:"/sbit.dev/docs/SBit-Core/Development/cli"}},c={},u=[{value:"bitcoinconsensus",id:"bitcoinconsensus",level:2},{value:"API",id:"api",level:2},{value:"Version",id:"version",level:3},{value:"Script Validation",id:"script-validation",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Script Flags",id:"script-flags",level:4},{value:"Errors",id:"errors",level:4},{value:"Example Implementations",id:"example-implementations",level:2}],m={toc:u};function d(e){var t=e.components,i=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"bitcoinconsensus"},"bitcoinconsensus"),(0,a.kt)("p",null,"The purpose of this library is to make the verification functionality that is critical to Bitcoin's consensus available to other applications, e.g. to language bindings."),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("p",null,"The interface is defined in the C header ",(0,a.kt)("inlineCode",{parentName:"p"},"bitcoinconsensus.h")," located in ",(0,a.kt)("inlineCode",{parentName:"p"},"src/script/bitcoinconsensus.h"),"."),(0,a.kt)("h3",{id:"version"},"Version"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"bitcoinconsensus_version")," returns an ",(0,a.kt)("inlineCode",{parentName:"p"},"unsigned int")," with the API version."),(0,a.kt)("h3",{id:"script-validation"},"Script Validation"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"bitcoinconsensus_verify_script")," returns an ",(0,a.kt)("inlineCode",{parentName:"p"},"int")," with the status of the verification. It will be ",(0,a.kt)("inlineCode",{parentName:"p"},"1")," if the input script correctly spends the previous output ",(0,a.kt)("inlineCode",{parentName:"p"},"scriptPubKey"),"."),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"const unsigned char *scriptPubKey")," - The previous output script that encumbers spending."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"unsigned int scriptPubKeyLen")," - The number of bytes for the ",(0,a.kt)("inlineCode",{parentName:"li"},"scriptPubKey"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"const unsigned char *txTo")," - The transaction with the input that is spending the previous output."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"unsigned int txToLen")," - The number of bytes for the ",(0,a.kt)("inlineCode",{parentName:"li"},"txTo"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"unsigned int nIn")," - The index of the input in ",(0,a.kt)("inlineCode",{parentName:"li"},"txTo")," that spends the ",(0,a.kt)("inlineCode",{parentName:"li"},"scriptPubKey"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"unsigned int flags")," - The script validation flags ",(0,a.kt)("em",{parentName:"li"},"(see below)"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_error* err")," - Will have the error/success code for the operation ",(0,a.kt)("em",{parentName:"li"},"(see below)"),".")),(0,a.kt)("h4",{id:"script-flags"},"Script Flags"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH")," - Evaluate P2SH (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki"},"BIP16"),") subscripts"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG")," - Enforce strict DER (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki"},"BIP66"),") compliance"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY")," - Enforce NULLDUMMY (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki"},"BIP147"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY")," - Enable CHECKLOCKTIMEVERIFY (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki"},"BIP65"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY")," - Enable CHECKSEQUENCEVERIFY (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki"},"BIP112"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS")," - Enable WITNESS (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki"},"BIP141"),")")),(0,a.kt)("h4",{id:"errors"},"Errors"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_ERR_OK")," - No errors with input parameters ",(0,a.kt)("em",{parentName:"li"},"(see the return value of ",(0,a.kt)("inlineCode",{parentName:"em"},"bitcoinconsensus_verify_script")," for the verification status)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_ERR_TX_INDEX")," - An invalid index for ",(0,a.kt)("inlineCode",{parentName:"li"},"txTo")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_ERR_TX_SIZE_MISMATCH")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"txToLen")," did not match with the size of ",(0,a.kt)("inlineCode",{parentName:"li"},"txTo")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_ERR_DESERIALIZE")," - An error deserializing ",(0,a.kt)("inlineCode",{parentName:"li"},"txTo")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"bitcoinconsensus_ERR_AMOUNT_REQUIRED")," - Input amount is required if WITNESS is used")),(0,a.kt)("h2",{id:"example-implementations"},"Example Implementations"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/NicolasDorier/NBitcoin/blob/master/NBitcoin/Script.cs#L814"},"NBitcoin")," (.NET Bindings)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/bitpay/node-libbitcoinconsensus"},"node-libbitcoinconsensus")," (Node.js Bindings)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/dexX7/java-libbitcoinconsensus"},"java-libbitcoinconsensus")," (Java Bindings)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/Bit-Wasp/bitcoinconsensus-php"},"bitcoinconsensus-php")," (PHP Bindings)")))}d.isMDXComponent=!0}}]);