"use strict";(self.webpackChunksbit_website=self.webpackChunksbit_website||[]).push([[2232],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return N}});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),p=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=p(t.components);return n.createElement(o.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,s=d(t,["components","mdxType","originalType","parentName"]),k=p(a),N=r,u=k["".concat(o,".").concat(N)]||k[N]||m[N]||l;return a?n.createElement(u,i(i({ref:e},s),{},{components:a})):n.createElement(u,i({ref:e},s))}));function N(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var d={};for(var o in e)hasOwnProperty.call(e,o)&&(d[o]=e[o]);d.originalType=t,d.mdxType="string"==typeof t?t:r,i[1]=d;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},9403:function(t,e,a){a.r(e),a.d(e,{assets:function(){return s},contentTitle:function(){return o},default:function(){return N},frontMatter:function(){return d},metadata:function(){return p},toc:function(){return m}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],d={title:"Sbit Core file system",description:"Sbit Core file system",keywords:["sbit","bitcoin","blockchain","ethereum"],sidebar_position:1},o=void 0,p={unversionedId:"SBit-Core/Miscellaneous/files",id:"SBit-Core/Miscellaneous/files",title:"Sbit Core file system",description:"Sbit Core file system",source:"@site/docs/SBit-Core/Miscellaneous/files.md",sourceDirName:"SBit-Core/Miscellaneous",slug:"/SBit-Core/Miscellaneous/files",permalink:"/sbit.dev/docs/SBit-Core/Miscellaneous/files",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Sbit Core file system",description:"Sbit Core file system",keywords:["sbit","bitcoin","blockchain","ethereum"],sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"SBIT Command Line Client",permalink:"/sbit.dev/docs/SBit-Core/Development/cli"},next:{title:"Fuzzing",permalink:"/sbit.dev/docs/SBit-Core/Miscellaneous/fuzzing"}},s={},m=[{value:"Data directory location",id:"data-directory-location",level:2},{value:"Data directory layout",id:"data-directory-layout",level:2},{value:"Multi-wallet environment",id:"multi-wallet-environment",level:2},{value:"Berkeley DB database based wallets",id:"berkeley-db-database-based-wallets",level:3},{value:"SQLite database based wallets",id:"sqlite-database-based-wallets",level:3},{value:"GUI settings",id:"gui-settings",level:2},{value:"Notes",id:"notes",level:2}],k={toc:m};function N(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},k,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"data-directory-location"},"Data directory location"),(0,l.kt)("p",null,"The data directory is the default location where the Sbit Core files are stored."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The default data directory paths for supported platforms are:")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Platform"),(0,l.kt)("th",{parentName:"tr",align:null},"Data directory path"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Linux"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$HOME/.sbit/"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"macOS"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"$HOME/Library/Application Support/Sbit/"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Windows"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"%APPDATA%\\Sbit\\")," ",(0,l.kt)("sup",null,(0,l.kt)("a",{parentName:"td",href:"#note1"},"[","1","]")))))),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"A custom data directory path can be specified with the ",(0,l.kt)("inlineCode",{parentName:"p"},"-datadir")," option.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"All content of the data directory, except for ",(0,l.kt)("inlineCode",{parentName:"p"},"sbit.conf")," file, is chain-specific. This means the actual data directory paths for non-mainnet cases differ:"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Chain option"),(0,l.kt)("th",{parentName:"tr",align:null},"Data directory path"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-chain=main")," (default)"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"path_to_datadir"),(0,l.kt)("inlineCode",{parentName:"td"},"/"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-chain=test")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"-testnet")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"path_to_datadir"),(0,l.kt)("inlineCode",{parentName:"td"},"/testnet3/"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-chain=signet")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"-signet")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"path_to_datadir"),(0,l.kt)("inlineCode",{parentName:"td"},"/signet/"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-chain=regtest")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"-regtest")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("em",{parentName:"td"},"path_to_datadir"),(0,l.kt)("inlineCode",{parentName:"td"},"/regtest/"))))),(0,l.kt)("h2",{id:"data-directory-layout"},"Data directory layout"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Subdirectory"),(0,l.kt)("th",{parentName:"tr",align:null},"File(s)"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"blocks/")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"Blocks directory; can be specified by ",(0,l.kt)("inlineCode",{parentName:"td"},"-blocksdir")," option (except for ",(0,l.kt)("inlineCode",{parentName:"td"},"blocks/index/"),")")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"blocks/index/")),(0,l.kt)("td",{parentName:"tr",align:null},"LevelDB database"),(0,l.kt)("td",{parentName:"tr",align:null},"Block index; ",(0,l.kt)("inlineCode",{parentName:"td"},"-blocksdir")," option does not affect this path")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"blocks/")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"blkNNNNN.dat"),(0,l.kt)("sup",null,(0,l.kt)("a",{parentName:"td",href:"#note2"},"[","2","]"))),(0,l.kt)("td",{parentName:"tr",align:null},"Actual Sbit blocks (in network format, dumped in raw on disk, 128 MiB per file)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"blocks/")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"revNNNNN.dat"),(0,l.kt)("sup",null,(0,l.kt)("a",{parentName:"td",href:"#note2"},"[","2","]"))),(0,l.kt)("td",{parentName:"tr",align:null},"Block undo data (custom format)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"chainstate/")),(0,l.kt)("td",{parentName:"tr",align:null},"LevelDB database"),(0,l.kt)("td",{parentName:"tr",align:null},"Blockchain state (a compact representation of all currently unspent transaction outputs (UTXOs) and metadata about the transactions they are from)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"indexes/txindex/")),(0,l.kt)("td",{parentName:"tr",align:null},"LevelDB database"),(0,l.kt)("td",{parentName:"tr",align:null},"Transaction index; ",(0,l.kt)("em",{parentName:"td"},"optional"),", used if ",(0,l.kt)("inlineCode",{parentName:"td"},"-txindex=1"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"indexes/blockfilter/basic/db/")),(0,l.kt)("td",{parentName:"tr",align:null},"LevelDB database"),(0,l.kt)("td",{parentName:"tr",align:null},"Blockfilter index LevelDB database for the basic filtertype; ",(0,l.kt)("em",{parentName:"td"},"optional"),", used if ",(0,l.kt)("inlineCode",{parentName:"td"},"-blockfilterindex=basic"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"indexes/blockfilter/basic/")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fltrNNNNN.dat"),(0,l.kt)("sup",null,(0,l.kt)("a",{parentName:"td",href:"#note2"},"[","2","]"))),(0,l.kt)("td",{parentName:"tr",align:null},"Blockfilter index filters for the basic filtertype; ",(0,l.kt)("em",{parentName:"td"},"optional"),", used if ",(0,l.kt)("inlineCode",{parentName:"td"},"-blockfilterindex=basic"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"wallets/")),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#multi-wallet-environment"},"Contains wallets"),"; can be specified by ",(0,l.kt)("inlineCode",{parentName:"td"},"-walletdir")," option; if ",(0,l.kt)("inlineCode",{parentName:"td"},"wallets/")," subdirectory does not exist, wallets reside in the ",(0,l.kt)("a",{parentName:"td",href:"#data-directory-location"},"data directory"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"anchors.dat")),(0,l.kt)("td",{parentName:"tr",align:null},"Anchor IP address database, created on shutdown and deleted at startup. Anchors are last known outgoing block-relay-only peers that are tried to re-connect to on startup")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"banlist.dat")),(0,l.kt)("td",{parentName:"tr",align:null},"Stores the IPs/subnets of banned nodes")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sbit.conf")),(0,l.kt)("td",{parentName:"tr",align:null},"User-defined ",(0,l.kt)("a",{parentName:"td",href:"sbit-conf"},"configuration settings")," for ",(0,l.kt)("inlineCode",{parentName:"td"},"sbitd")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"sbit-qt"),". File is not written to by the software and must be created manually. Path can be specified by ",(0,l.kt)("inlineCode",{parentName:"td"},"-conf")," option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sbit.pid")),(0,l.kt)("td",{parentName:"tr",align:null},"Stores the process ID (PID) of ",(0,l.kt)("inlineCode",{parentName:"td"},"sbitd")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"sbit-qt")," while running; created at start and deleted on shutdown; can be specified by ",(0,l.kt)("inlineCode",{parentName:"td"},"-pid")," option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"debug.log")),(0,l.kt)("td",{parentName:"tr",align:null},"Contains debug information and general logging generated by ",(0,l.kt)("inlineCode",{parentName:"td"},"sbitd")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"sbit-qt"),"; can be specified by ",(0,l.kt)("inlineCode",{parentName:"td"},"-debuglogfile")," option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"fee_estimates.dat")),(0,l.kt)("td",{parentName:"tr",align:null},"Stores statistics used to estimate minimum transaction fees and priorities required for confirmation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"guisettings.ini.bak")),(0,l.kt)("td",{parentName:"tr",align:null},"Backup of former ",(0,l.kt)("a",{parentName:"td",href:"#gui-settings"},"GUI settings")," after ",(0,l.kt)("inlineCode",{parentName:"td"},"-resetguisettings")," option is used")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ip_asn.map")),(0,l.kt)("td",{parentName:"tr",align:null},"IP addresses to Autonomous System Numbers (ASNs) mapping used for bucketing of the peers; path can be specified with the ",(0,l.kt)("inlineCode",{parentName:"td"},"-asmap")," option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"mempool.dat")),(0,l.kt)("td",{parentName:"tr",align:null},"Dump of the mempool's transactions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"onion_v3_private_key")),(0,l.kt)("td",{parentName:"tr",align:null},"Cached Tor onion service private key for ",(0,l.kt)("inlineCode",{parentName:"td"},"-listenonion")," option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"peers.dat")),(0,l.kt)("td",{parentName:"tr",align:null},"Peer IP address database (custom format)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"settings.json")),(0,l.kt)("td",{parentName:"tr",align:null},"Read-write settings set through GUI or RPC interfaces, augmenting manual settings from ",(0,l.kt)("a",{parentName:"td",href:"sbit-conf"},"sbit.conf"),". File is created automatically if read-write settings storage is not disabled with ",(0,l.kt)("inlineCode",{parentName:"td"},"-nosettings")," option. Path can be specified with ",(0,l.kt)("inlineCode",{parentName:"td"},"-settings")," option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".cookie")),(0,l.kt)("td",{parentName:"tr",align:null},"Session RPC authentication cookie; if used, created at start and deleted on shutdown; can be specified by ",(0,l.kt)("inlineCode",{parentName:"td"},"-rpccookiefile")," option")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".lock")),(0,l.kt)("td",{parentName:"tr",align:null},"Data directory lock file")))),(0,l.kt)("h2",{id:"multi-wallet-environment"},"Multi-wallet environment"),(0,l.kt)("p",null,"Wallets are Berkeley DB (BDB) or SQLite databases."),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},'Each user-defined wallet named "wallet_name" resides in the ',(0,l.kt)("inlineCode",{parentName:"p"},"wallets/wallet_name/")," subdirectory.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"The default (unnamed) wallet resides in ",(0,l.kt)("inlineCode",{parentName:"p"},"wallets/")," subdirectory; if the latter does not exist, the wallet resides in the data directory.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"A wallet database path can be specified with the ",(0,l.kt)("inlineCode",{parentName:"p"},"-wallet")," option.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"wallet.dat")," files must not be shared across different node instances, as that can result in key-reuse and double-spends due the lack of synchronization between instances.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Any copy or backup of the wallet should be done through a ",(0,l.kt)("inlineCode",{parentName:"p"},"backupwallet")," call in order to update and lock the wallet, preventing any file corruption caused by updates during the copy."))),(0,l.kt)("h3",{id:"berkeley-db-database-based-wallets"},"Berkeley DB database based wallets"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Subdirectory"),(0,l.kt)("th",{parentName:"tr",align:null},"File(s)"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"database/")),(0,l.kt)("td",{parentName:"tr",align:null},"BDB logging files"),(0,l.kt)("td",{parentName:"tr",align:null},"Part of BDB environment; created at start and deleted on shutdown; a user ",(0,l.kt)("em",{parentName:"td"},"must keep it as safe")," as personal wallet ",(0,l.kt)("inlineCode",{parentName:"td"},"wallet.dat"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"db.log")),(0,l.kt)("td",{parentName:"tr",align:null},"BDB error file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"wallet.dat")),(0,l.kt)("td",{parentName:"tr",align:null},"Personal wallet (a BDB database) with keys and transactions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},".walletlock")),(0,l.kt)("td",{parentName:"tr",align:null},"BDB wallet lock file")))),(0,l.kt)("h3",{id:"sqlite-database-based-wallets"},"SQLite database based wallets"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Subdirectory"),(0,l.kt)("th",{parentName:"tr",align:null},"File"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"wallet.dat")),(0,l.kt)("td",{parentName:"tr",align:null},"Personal wallet (a SQLite database) with keys and transactions")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"wallet.dat-journal")),(0,l.kt)("td",{parentName:"tr",align:null},"SQLite Rollback Journal file for ",(0,l.kt)("inlineCode",{parentName:"td"},"wallet.dat"),". Usually created at start and deleted on shutdown. A user ",(0,l.kt)("em",{parentName:"td"},"must keep it as safe")," as the ",(0,l.kt)("inlineCode",{parentName:"td"},"wallet.dat")," file.")))),(0,l.kt)("h2",{id:"gui-settings"},"GUI settings"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"sbit-qt")," uses ",(0,l.kt)("a",{parentName:"p",href:"https://doc.qt.io/qt-5/qsettings.html"},(0,l.kt)("inlineCode",{parentName:"a"},"QSettings"))," class; this implies platform-specific ",(0,l.kt)("a",{parentName:"p",href:"https://doc.qt.io/qt-5/qsettings.html#locations-where-application-settings-are-stored"},"locations where application settings are stored"),"."),(0,l.kt)("h2",{id:"notes"},"Notes"),(0,l.kt)("a",{name:"note1"},"1"),". The `/` (slash, U+002F) is used as the platform-independent path component separator in this document.",(0,l.kt)("a",{name:"note2"},"2"),". `NNNNN` matches `[0-9]",5,"` regex.")}N.isMDXComponent=!0}}]);