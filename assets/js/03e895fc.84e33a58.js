"use strict";(self.webpackChunksbit_website=self.webpackChunksbit_website||[]).push([[7066],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=l(n),u=o,f=p["".concat(s,".").concat(u)]||p[u]||m[u]||r;return n?a.createElement(f,c(c({ref:t},d),{},{components:n})):a.createElement(f,c({ref:t},d))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,c=new Array(r);c[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<r;l++)c[l]=n[l];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6566:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return m}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),c=["components"],i={title:"SBIT Command Line Client",description:"SBIT Command Line Client",keywords:["sbit","bitcoin","blockchain","ethereum"],sidebar_position:9},s=void 0,l={unversionedId:"SBit-Core/Development/cli",id:"SBit-Core/Development/cli",title:"SBIT Command Line Client",description:"SBIT Command Line Client",source:"@site/docs/SBit-Core/Development/cli.md",sourceDirName:"SBit-Core/Development",slug:"/SBit-Core/Development/cli",permalink:"/sbit.dev/docs/SBit-Core/Development/cli",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"SBIT Command Line Client",description:"SBIT Command Line Client",keywords:["sbit","bitcoin","blockchain","ethereum"],sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Shared Libraries",permalink:"/sbit.dev/docs/SBit-Core/Development/shared-libraries"},next:{title:"Sbit Core file system",permalink:"/sbit.dev/docs/SBit-Core/Miscellaneous/files"}},d={},m=[{value:"\ud83d\udeab Account (Deprecated) \ud83d\udeab",id:"-account-deprecated-",level:2},{value:"Help For Specific Command",id:"help-for-specific-command",level:2}],p={toc:m};function u(e){var t=e.components,n=(0,o.Z)(e,c);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"sbit-cli")," tool is based on ",(0,r.kt)("inlineCode",{parentName:"p"},"bitcoin-cli"),". Many command are inherited from ",(0,r.kt)("a",{parentName:"p",href:"https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list#References"},"Bitcoin API calls"),"."),(0,r.kt)("p",null,"List all available commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'scli help # on docker\nor\nsbit-cli help\n\n== Blockchain ==\ncallcontract "address" "data" ( address )\ngetaccountinfo "address"\ngetbestblockhash\ngetblock "blockhash" ( verbose )\ngetblockchaininfo\ngetblockcount\ngetblockhash height\ngetblockheader "hash" ( verbose )\ngetchaintips\n\n...more\n')),(0,r.kt)("p",null,"To support the EVM smart contract, there are a few SBIT specific commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'callcontract "address" "data" ( address )\nlistcontracts (start maxDisplay)\ncreatecontract "bytecode" (gaslimit gasprice "senderaddress" broadcast)\nsendtocontract "contractaddress" "data" (amount gaslimit gasprice senderaddress broadcast)\n')),(0,r.kt)("h2",{id:"-account-deprecated-"},"\ud83d\udeab Account (Deprecated) \ud83d\udeab"),(0,r.kt)("p",null,"the Sbit provided API to ",(0,r.kt)("a",{parentName:"p",href:"https://en.bitcoin.it/wiki/Help:Accounts_explained"},'organize addresses by "account"')," in its local wallet:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'scli help | grep account\n\ngetaccountinfo "address"\naddmultisigaddress nrequired ["key",...] ( "account" )\ngetaccount "address"\ngetaccountaddress "account"\ngetaddressesbyaccount "account"\ngetbalance ( "account" minconf include_watchonly )\ngetnewaddress ( "account" )\ngetreceivedbyaccount "account" ( minconf )\nlistaccounts ( minconf include_watchonly)\nlistreceivedbyaccount ( minconf include_empty include_watchonly)\nlisttransactions ( "account" count skip include_watchonly)\nmove "fromaccount" "toaccount" amount ( minconf "comment" )\nsendfrom "fromaccount" "toaddress" amount ( minconf "comment" "comment_to" )\nsendmany "fromaccount" {"address":amount,...} ( minconf "comment" ["address",...] )\nsendmanywithdupes "fromaccount" {"address":amount,...} ( minconf "comment" ["address",...] )\nsetaccount "address" "account"\n')),(0,r.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"danger")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"This account feature is deprecated, please don't use it."))),(0,r.kt)("h2",{id:"help-for-specific-command"},"Help For Specific Command"),(0,r.kt)("p",null,"There are detailed documentation for most commands. Let's look at the help message for ",(0,r.kt)("inlineCode",{parentName:"p"},"listsinceblock"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Get all transactions in blocks since block [blockhash], or all transactions if omitted\n\nArguments:\n1. "blockhash"            (string, optional) The block hash to list transactions since\n2. target_confirmations:    (numeric, optional) The confirmations required, must be 1 or more\n3. include_watchonly:       (bool, optional, default=false) Include transactions to watch-only addresses (see \'importaddress\')\n\nResult:\n{\n  "transactions": [\n    "account":"accountname",       (string) DEPRECATED. The account name associated with the transaction. Will be "" for the default account.\n    "address":"address",    (string) The sbit address of the transaction. Not present for move transactions (category = move).\n    ...\n  ],\n  "lastblock": "lastblockhash"     (string) The hash of the last block\n}\n\nExamples:\n> sbit-cli listsinceblock\n> sbit-cli listsinceblock "000000000000000bacf66f7497b7dc45ef753ee9a7d38571037cdb1a57f663ad" 6\n> curl --user myusername --data-binary \'{"jsonrpc": "1.0", "id":"curltest", "method": "listsinceblock", "params": ["000000000000000bacf66f7497b7d\nc45ef753ee9a7d38571037cdb1a57f663ad", 6] }\' -H \'content-type: text/plain;\' http://127.0.0.1:22002/\n')))}u.isMDXComponent=!0}}]);