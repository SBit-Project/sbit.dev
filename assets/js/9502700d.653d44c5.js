"use strict";(self.webpackChunksbit_website=self.webpackChunksbit_website||[]).push([[1970],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,b=p["".concat(l,".").concat(m)]||p[m]||c[m]||i;return n?a.createElement(b,r(r({ref:t},d),{},{components:n})):a.createElement(b,r({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var u=2;u<i;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4582:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var a=n(7462),o=n(3366),i=(n(7294),n(3905)),r=["components"],s={title:"SBit ethjs-abi",description:"Just the encoding and decoding of contract data.",keywords:["sbit","bitcoin","blockchain","ethereum","api","tools"],sidebar_position:1},l=void 0,u={unversionedId:"Tools/sbit-ethjs-abi/SBit-ethjs-abi",id:"Tools/sbit-ethjs-abi/SBit-ethjs-abi",title:"SBit ethjs-abi",description:"Just the encoding and decoding of contract data.",source:"@site/docs/Tools/sbit-ethjs-abi/SBit-ethjs-abi.md",sourceDirName:"Tools/sbit-ethjs-abi",slug:"/Tools/sbit-ethjs-abi/",permalink:"/sbit.dev/docs/Tools/sbit-ethjs-abi/",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"SBit ethjs-abi",description:"Just the encoding and decoding of contract data.",keywords:["sbit","bitcoin","blockchain","ethereum","api","tools"],sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Raw SRC20 Transaction implementation",permalink:"/sbit.dev/docs/Smart-Contract/Raw-SRC20-Transaction-implementation-guide"},next:{title:"User Guide",permalink:"/sbit.dev/docs/Tools/sbit-ethjs-abi/user-guide"}},d={},c=[{value:"About",id:"about",level:2},{value:"Usage",id:"usage",level:2},{value:"Guides",id:"guides",level:2},{value:"Help out",id:"help-out",level:2},{value:"Important documents",id:"important-documents",level:2}],p={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"about"},"About"),(0,i.kt)("p",null,"Just the encoding and decoding of contract data."),(0,i.kt)("p",null,"Forked from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ethjs/ethjs-abi"},"https://github.com/ethjs/ethjs-abi")),(0,i.kt)("p",null,"Differences:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'Accept hex string with or without "0x" as input.'),(0,i.kt)("li",{parentName:"ul"},'Configurable option to output hex string with or without "0x" prefix.'),(0,i.kt)("li",{parentName:"ul"},"Add ",(0,i.kt)("inlineCode",{parentName:"li"},"Buffer")," browser polyfill.")),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"This package is experimental, and is not ready for production use."))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const abi = require(\'ethjs-abi\');\nconst SimpleStoreABI = [{"constant":false,"inputs":[{"name":"_value","type":"uint256"}],"name":"set","outputs":[{"name":"","type":"bool"}],"payable":false,"type":"function"},{"constant":false,"inputs":[],"name":"get","outputs":[{"name":"storeValue","type":"uint256"}],"payable":false,"type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"name":"_newValue","type":"uint256"},{"indexed":false,"name":"_sender","type":"address"}],"name":"SetComplete","type":"event"}];\n\n\nconst setInputBytecode = abi.encodeMethod(SimpleStoreABI[0], [24000]);\n\n// returns 0x60fe47b10000000000000000000000000000000000000000000000000000000000005dc0\n\nconst setOutputBytecode = abi.decodeMethod(SimpleStoreABI[0], "0x0000000000000000000000000000000000000000000000000000000000000001");\n\n// returns  Result { \'0\': true }\n\n\n\nconst getInputBytecode = abi.encodeMethod(SimpleStoreABI[1], []);\n\n// returns 0x6d4ce63c\n\nconst getMethodOutputBytecode = abi.decodeMethod(SimpleStoreABI[1], "0x000000000000000000000000000000000000000000000000000000000000b26e");\n\n// returns Result { \'0\': <BN: b26e>, storeValue: <BN: b26e> }\n\n\n\nconst SetCompleteInputBytecode = abi.encodeEvent(SimpleStoreABI[2], [24000, "0xca35b7d915458ef540ade6068dfe2f44e8fa733c"]);\n\n// returns 0x10e8e9bc0000000000000000000000000000000000000000000000000000000000005dc0000000000000000000000000ca35b7d915458ef540ade6068dfe2f44e8fa733c\n\nconst SetCompleteOutputBytecode = abi.decodeEvent(SimpleStoreABI[2], "0x0000000000000000000000000000000000000000000000000000000000000d7d000000000000000000000000ca35b7d915458ef540ade6068dfe2f44e8fa733c", ["0xc36800ebd6079fdafc3a7100d0d1172815751804a6d1b7eb365b85f6c9c80e61"]);\n\n/* returns   Result {\n  \'0\': <BN: d7d>,\n  \'1\': \'0xca35b7d915458ef540ade6068dfe2f44e8fa733c\',\n  _newValue: <BN: d7d>,\n  _sender: \'0xca35b7d915458ef540ade6068dfe2f44e8fa733c\' }\n*/\n\nconst methodSig = abi.encodeSignature(SimpleStoreABI[2]);\n\n/* returns 0x10e8e9bc */\n')),(0,i.kt)("p",null,"for contract SimpleStore:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"pragma solidity ^0.4.4;\n\ncontract SimpleStore {\n  uint store;\n\n  function set(uint256 _value) returns (bool) {\n    store = _value;\n\n    SetComplete(store, msg.sender);\n\n    return true;\n  }\n\n  function get() returns (uint256 storeValue) {\n    return store;\n  }\n\n  event SetComplete(uint256 _newValue, address _sender);\n}\n")),(0,i.kt)("h2",{id:"guides"},"Guides"),(0,i.kt)("p",null,"You'll find more detailed information on using ",(0,i.kt)("inlineCode",{parentName:"p"},"SBit ethjs-abi")," and tailoring it to your needs in our guides:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/sbit-ethjs-abi/user-guide"},"User guide")," - Usage, configuration, FAQ and complementary tools."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Tools/sbit-ethjs-abi/developer-guide"},"Developer guide")," - Contributing to ",(0,i.kt)("inlineCode",{parentName:"li"},"SBit ethjs-abi")," and writing your own code and coverage.")),(0,i.kt)("h2",{id:"help-out"},"Help out"),(0,i.kt)("p",null,"There is always a lot of work to do, and will have many rules to maintain. So please help out in any way that you can:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create, enhance, and debug SBit ethjs rules"),(0,i.kt)("li",{parentName:"ul"},"Improve documentation."),(0,i.kt)("li",{parentName:"ul"},"Chime in on any open issue or pull request."),(0,i.kt)("li",{parentName:"ul"},"Open new issues about your ideas for making ",(0,i.kt)("inlineCode",{parentName:"li"},"SBit ethjs-abi")," better, and pull requests to show us how your idea works."),(0,i.kt)("li",{parentName:"ul"},"Add new tests to ",(0,i.kt)("em",{parentName:"li"},"absolutely anything"),"."),(0,i.kt)("li",{parentName:"ul"},"Create or contribute to ecosystem tools, like modules for encoding or contracts."),(0,i.kt)("li",{parentName:"ul"},"Spread the word.")),(0,i.kt)("p",null,"We communicate via ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SBit-Project/sbit-ethjs-abi/issues"},"issues")," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SBit-Project/sbit-ethjs-abi/pulls"},"pull requests"),"."),(0,i.kt)("h2",{id:"important-documents"},"Important documents"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sbit.dev/docs/Help/CODE_OF_CONDUCT"},"Code of Conduct")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/ethjs/ethjs-abi/master/LICENSE"},"License"))))}m.isMDXComponent=!0}}]);