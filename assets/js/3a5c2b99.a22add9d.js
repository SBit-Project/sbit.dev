"use strict";(self.webpackChunksbit_website=self.webpackChunksbit_website||[]).push([[8894],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=l,k=m["".concat(d,".").concat(c)]||m[c]||s[c]||r;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8888:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return s}});var a=n(7462),l=n(3366),r=(n(7294),n(3905)),i=["components"],o={title:"Depend",description:"Some notes on how to build SBit Core in Unix.",keywords:["sbit","bitcoin","blockchain","ethereum"],sidebar_position:9},d=void 0,p={unversionedId:"SBit-Core/Building/depend",id:"SBit-Core/Building/depend",title:"Depend",description:"Some notes on how to build SBit Core in Unix.",source:"@site/docs/SBit-Core/Building/depend.md",sourceDirName:"SBit-Core/Building",slug:"/SBit-Core/Building/depend",permalink:"/sbit.dev/docs/SBit-Core/Building/depend",tags:[],version:"current",sidebarPosition:9,frontMatter:{title:"Depend",description:"Some notes on how to build SBit Core in Unix.",keywords:["sbit","bitcoin","blockchain","ethereum"],sidebar_position:9},sidebar:"tutorialSidebar",previous:{title:"Gitian building",permalink:"/sbit.dev/docs/SBit-Core/Building/gitian-building"},next:{title:"Dependencies",permalink:"/sbit.dev/docs/SBit-Core/Building/dependencies"}},u={},s=[{value:"Install the required dependencies: Ubuntu &amp; Debian",id:"install-the-required-dependencies-ubuntu--debian",level:3},{value:"For macOS cross compilation",id:"for-macos-cross-compilation",level:4},{value:"For Win64 cross compilation",id:"for-win64-cross-compilation",level:4},{value:"For linux (including i386, ARM) cross compilation",id:"for-linux-including-i386-arm-cross-compilation",level:4},{value:"Dependency Options",id:"dependency-options",level:3},{value:"Additional targets",id:"additional-targets",level:3},{value:"Android",id:"android",level:3}],m={toc:s};function c(e){var t=e.components,n=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To build dependencies for the current arch+OS:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"make\n")),(0,r.kt)("p",null,"To build for another arch/OS:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"make HOST=host-platform-triplet\n")),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"make HOST=x86_64-w64-mingw32 -j4\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"SBit Core's configure script by default will ignore the depends output.")," In\norder for it to pick up libraries, tools, and settings from the depends build,\nyou must point it at the appropriate ",(0,r.kt)("inlineCode",{parentName:"p"},"--prefix")," directory generated by the\nbuild. In the above example, a prefix dir named x86_64-w64-mingw32 will be\ncreated. To use it for SBit:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./configure --prefix=$PWD/depends/x86_64-w64-mingw32\n")),(0,r.kt)("p",null,"Common ",(0,r.kt)("inlineCode",{parentName:"p"},"host-platform-triplets")," for cross compilation are:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Platform"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"i686-pc-linux-gnu"),(0,r.kt)("td",{parentName:"tr",align:null},"For Linux 32 bit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x86_64-pc-linux-gnu"),(0,r.kt)("td",{parentName:"tr",align:null},"For x86 Linux")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x86_64-w64-mingw32"),(0,r.kt)("td",{parentName:"tr",align:null},"For Win64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"arm-linux-gnueabihf"),(0,r.kt)("td",{parentName:"tr",align:null},"For Linux ARM 32 bit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x86_64-apple-darwin16"),(0,r.kt)("td",{parentName:"tr",align:null},"For macOS")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"aarch64-linux-gnu"),(0,r.kt)("td",{parentName:"tr",align:null},"For Linux ARM 64 bit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"powerpc64-linux-gnu"),(0,r.kt)("td",{parentName:"tr",align:null},"For Linux POWER 64-bit (big endian)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"powerpc64le-linux-gnu"),(0,r.kt)("td",{parentName:"tr",align:null},"For Linux POWER 64-bit (little endian)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"riscv32-linux-gnu"),(0,r.kt)("td",{parentName:"tr",align:null},"For Linux RISC-V 32 bit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"riscv64-linux-gnu"),(0,r.kt)("td",{parentName:"tr",align:null},"For Linux RISC-V 64 bit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"s390x-linux-gnu"),(0,r.kt)("td",{parentName:"tr",align:null},"For Linux S390X")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"armv7a-linux-android"),(0,r.kt)("td",{parentName:"tr",align:null},"For Android ARM 32 bit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"aarch64-linux-android"),(0,r.kt)("td",{parentName:"tr",align:null},"For Android ARM 64 bit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"i686-linux-android"),(0,r.kt)("td",{parentName:"tr",align:null},"For Android x86 32 bit")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"x86_64-linux-android"),(0,r.kt)("td",{parentName:"tr",align:null},"For Android x86 64 bit")))),(0,r.kt)("p",null,"The paths are automatically configured and no other options are needed unless targeting ",(0,r.kt)("a",{parentName:"p",href:"#Android"},"Android"),"."),(0,r.kt)("h3",{id:"install-the-required-dependencies-ubuntu--debian"},"Install the required dependencies: Ubuntu & Debian"),(0,r.kt)("h4",{id:"for-macos-cross-compilation"},"For macOS cross compilation"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install curl librsvg2-bin libtiff-tools bsdmainutils cmake imagemagick libcap-dev libz-dev libbz2-dev python3-setuptools libtinfo5\n")),(0,r.kt)("h4",{id:"for-win64-cross-compilation"},"For Win64 cross compilation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"see ",(0,r.kt)("a",{parentName:"li",href:"build-windows"},"build-windows.md"))),(0,r.kt)("h4",{id:"for-linux-including-i386-arm-cross-compilation"},"For linux (including i386, ARM) cross compilation"),(0,r.kt)("p",null,"Common linux dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install make automake cmake curl g++-multilib libtool binutils-gold bsdmainutils pkg-config python3 patch\n")),(0,r.kt)("p",null,"For linux ARM cross compilation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install g++-arm-linux-gnueabihf binutils-arm-linux-gnueabihf\n")),(0,r.kt)("p",null,"For linux AARCH64 cross compilation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install g++-aarch64-linux-gnu binutils-aarch64-linux-gnu\n")),(0,r.kt)("p",null,"For linux POWER 64-bit cross compilation (there are no packages for 32-bit):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install g++-powerpc64-linux-gnu binutils-powerpc64-linux-gnu g++-powerpc64le-linux-gnu binutils-powerpc64le-linux-gnu\n")),(0,r.kt)("p",null,"For linux RISC-V 64-bit cross compilation (there are no packages for 32-bit):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install g++-riscv64-linux-gnu binutils-riscv64-linux-gnu\n")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"RISC-V known issue: gcc-7.3.0 and gcc-7.3.1 result in a broken ",(0,r.kt)("inlineCode",{parentName:"p"},"test_bitcoin")," executable (see ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/bitcoin/bitcoin/pull/13543"},"https://github.com/bitcoin/bitcoin/pull/13543"),"),\nthis is apparently fixed in gcc-8.1.0."))),(0,r.kt)("p",null,"For linux S390X cross compilation:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get install g++-s390x-linux-gnu binutils-s390x-linux-gnu\n")),(0,r.kt)("h3",{id:"dependency-options"},"Dependency Options"),(0,r.kt)("p",null,"The following can be set when running make: ",(0,r.kt)("inlineCode",{parentName:"p"},"make FOO=bar")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Options"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SOURCES_PATH"),(0,r.kt)("td",{parentName:"tr",align:null},"Downloaded sources will be placed here")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BASE_CACHE"),(0,r.kt)("td",{parentName:"tr",align:null},"Built packages will be placed here")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SDK_PATH"),(0,r.kt)("td",{parentName:"tr",align:null},"Path where sdk's can be found (used by macOS)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FALLBACK_DOWNLOAD_PATH"),(0,r.kt)("td",{parentName:"tr",align:null},"If a source file can't be fetched, try here before giving up")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO_QT"),(0,r.kt)("td",{parentName:"tr",align:null},"Don't download/build/cache qt and its dependencies")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO_QR"),(0,r.kt)("td",{parentName:"tr",align:null},"Don't download/build/cache packages needed for enabling qrencode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO_ZMQ"),(0,r.kt)("td",{parentName:"tr",align:null},"Don't download/build/cache packages needed for enabling zeromq")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO_WALLET"),(0,r.kt)("td",{parentName:"tr",align:null},"Don't download/build/cache libs needed to enable the wallet")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO_BDB"),(0,r.kt)("td",{parentName:"tr",align:null},"Don't download/build/cache BerkeleyDB")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO_SQLITE"),(0,r.kt)("td",{parentName:"tr",align:null},"Don't download/build/cache SQLite")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"NO_UPNP"),(0,r.kt)("td",{parentName:"tr",align:null},"Don't download/build/cache packages needed for enabling upnp")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ALLOW_HOST_PACKAGES"),(0,r.kt)("td",{parentName:"tr",align:null},"Packages that are missed in dependencies (due to ",(0,r.kt)("inlineCode",{parentName:"td"},"NO_*")," option or build script logic) are searched for among the host system packages using",(0,r.kt)("inlineCode",{parentName:"td"},"pkg-config"),". It allows building with packages of other (newer) versions")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"MULTIPROCESS"),(0,r.kt)("td",{parentName:"tr",align:null},"Build libmultiprocess (experimental, requires cmake)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DEBUG"),(0,r.kt)("td",{parentName:"tr",align:null},"Disable some optimizations and enable more runtime checking")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HOST_ID_SALT"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional salt to use when generating host package ids")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"BUILD_ID_SALT"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional salt to use when generating build package ids")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"FORCE_USE_SYSTEM_CLANG"),(0,r.kt)("td",{parentName:"tr",align:null},"(EXPERTS ONLY) When cross-compiling for macOS, use Clang found in the system's ",(0,r.kt)("code",null,"$PATH")," rather than the default prebuilt release of Clang from llvm.org. Clang 8 or later is required.")))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If some packages are not built, for example ",(0,r.kt)("inlineCode",{parentName:"p"},"make NO_WALLET=1"),", the appropriate\noptions will be passed to sbit's configure. In this case, ",(0,r.kt)("inlineCode",{parentName:"p"},"--disable-wallet"),"."))),(0,r.kt)("h3",{id:"additional-targets"},"Additional targets"),(0,r.kt)("p",null,"Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"make download # fetch all sources without building them\n")),(0,r.kt)("p",null,"Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"make download-osx # fetch all sources needed for macOS builds\n")),(0,r.kt)("p",null,"Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"make download-win # fetch all sources needed for win builds\n")),(0,r.kt)("p",null,"Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"make download-linux # fetch all sources needed for linux builds\n")),(0,r.kt)("h3",{id:"android"},"Android"),(0,r.kt)("p",null,"Before proceeding with an Android build one needs to get the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/studio"},"Android SDK"),' and use the "SDK Manager" tool to download the NDK and one or more "Platform packages" (these are Android versions and have a corresponding API level).'),(0,r.kt)("p",null,"In order to build ",(0,r.kt)("inlineCode",{parentName:"p"},"ANDROID_API_LEVEL"),' (API level corresponding to the Android version targeted, e.g. Android 9.0 Pie is 28 and its "Platform package" needs to be available) and ',(0,r.kt)("inlineCode",{parentName:"p"},"ANDROID_TOOLCHAIN_BIN")," (path to toolchain binaries depending on the platform the build is being performed on) need to be set."),(0,r.kt)("p",null,"API levels from 24 to 29 have been tested to work."),(0,r.kt)("p",null,"If the build includes Qt, environment variables ",(0,r.kt)("inlineCode",{parentName:"p"},"ANDROID_SDK")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ANDROID_NDK")," need to be set as well but can otherwise be omitted.\nThis is an example command for a default build with no disabled dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ANDROID_SDK=/home/user/Android/Sdk ANDROID_NDK=/home/user/Android/Sdk/ndk-bundle make HOST=aarch64-linux-android ANDROID_API_LEVEL=28 \n\nANDROID_TOOLCHAIN_BIN=/home/user/Android/Sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin\n")))}c.isMDXComponent=!0}}]);