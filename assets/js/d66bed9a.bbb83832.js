"use strict";(self.webpackChunksbit_website=self.webpackChunksbit_website||[]).push([[1289],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,k=u["".concat(i,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7072:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],s={title:"Simple Crowdsale",description:"Crowdsale using the contracts from Vevue's ICO",keywords:["sbit","ico","smart contract","token"],sidebar_position:4},i=void 0,c={unversionedId:"Smart-Contract/SRC20/Simple-Crowdsale",id:"Smart-Contract/SRC20/Simple-Crowdsale",title:"Simple Crowdsale",description:"Crowdsale using the contracts from Vevue's ICO",source:"@site/docs/Smart-Contract/SRC20/Simple-Crowdsale.md",sourceDirName:"Smart-Contract/SRC20",slug:"/Smart-Contract/SRC20/Simple-Crowdsale",permalink:"/sbit.dev/docs/Smart-Contract/SRC20/Simple-Crowdsale",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Simple Crowdsale",description:"Crowdsale using the contracts from Vevue's ICO",keywords:["sbit","ico","smart contract","token"],sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"SRC20 DApp",permalink:"/sbit.dev/docs/Smart-Contract/SRC20/src20-dapp"},next:{title:"Complex Crowdsale",permalink:"/sbit.dev/docs/Smart-Contract/SRC20/ico"}},d={},p=[{value:"Create An Owner Address",id:"create-an-owner-address",level:2},{value:"Deploy The Token Contract",id:"deploy-the-token-contract",level:2},{value:"Initial Crowdsale State",id:"initial-crowdsale-state",level:2},{value:"Buy Tokens",id:"buy-tokens",level:2}],u={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this chapter we will hold a crowdsale using the contracts from Vevue's ICO. It is essentially an SRC20 token, with the addition of an ",(0,o.kt)("inlineCode",{parentName:"p"},"buyTokens")," method. When a user sends money into the contract using ",(0,o.kt)("inlineCode",{parentName:"p"},"buyTokens"),", tokens are minted and credited to the purchaser according to a fixed exchange rate."),(0,o.kt)("p",null,"The source code for this chapter is at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SBit-Project/sbitjs-vevue-ico"},"SBit-Project/sbitjs-vevue-ico"),"."),(0,o.kt)("p",null,"There are a few hard codeed parameters in the token contract, and you could tweak them to suit your particular token design."),(0,o.kt)("p",null,"Some of the contract parameters are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"decimals"),': How "divisble" one unit token is.',(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"8 decimal places, to be as divisible as Bitcoin. The smallest unit is satoshi."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tokenTotalSupply"),": The maximum token supply.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"100M tokens in total."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"saleAmount"),": amount of tokens to sell.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"40M tokens for sell"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"_initialExchangeRate"),": the exchange rate.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Set to 1 sbit for 100 tokens.")))),(0,o.kt)("p",null,"For simplicity, we disabled the start and end time of the crowdsale (specified in block number)."),(0,o.kt)("p",null,"Let's launch our crowdsale!"),(0,o.kt)("h2",{id:"create-an-owner-address"},"Create An Owner Address"),(0,o.kt)("p",null,"Let's generate an address to be the owner of the contract. The crowdsale proceeds will go into this address."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"scli getnewaddress\nsJtdUF9ko4Hk95cqTzq7SDs18dapNwjRNS\n\nscli gethexaddress sJtdUF9ko4Hk95cqTzq7SDs18dapNwjRNS\n0e9bfa516890f857beaba3eba35cc478ab10bce4\n")),(0,o.kt)("p",null,"Send some fund to the owner address pay for gas:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"scli sendtoaddress sJtdUF9ko4Hk95cqTzq7SDs18dapNwjRNS 1\n")),(0,o.kt)("p",null,"Then we should configure ",(0,o.kt)("inlineCode",{parentName:"p"},"solar")," to use this address when we deploy new contracts."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"export SBIT_SENDER=sJtdUF9ko4Hk95cqTzq7SDs18dapNwjRNS\n")),(0,o.kt)("h2",{id:"deploy-the-token-contract"},"Deploy The Token Contract"),(0,o.kt)("p",null,"Use solar to deploy the contract:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"solar deploy VevueToken.sol --force\n\n\ud83d\ude80  All contracts confirmed\n   deployed VevueToken.sol => 09b97cc71a300f1bdad44711f4ce9f25bd404d8b\n")),(0,o.kt)("p",null,"Verify that the contract owner is the ",(0,o.kt)("inlineCode",{parentName:"p"},"SBIT_SENDER")," address that we've set before:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"solar status\n\n\u2705  VevueToken.sol\n        txid: 08528ef006f05fdfe1d6eb3006bac7dfc21d6f854822081575b9ff8b61950cdd\n     address: 09b97cc71a300f1bdad44711f4ce9f25bd404d8b\n   confirmed: true\n       owner: sJtdUF9ko4Hk95cqTzq7SDs18dapNwjRNS\n")),(0,o.kt)("h2",{id:"initial-crowdsale-state"},"Initial Crowdsale State"),(0,o.kt)("p",null,"We can use the included sbitjs script to print out information about the crowdsale:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js info\n\nsupply cap: 100000000.00000000\nsales cap: 40000000.00000000\ncurrent token supply: 0.0\ntokens sold: 0.0\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Verify that the supply and sales cap are as specified",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"There are 8 decimal places"))),(0,o.kt)("li",{parentName:"ul"},"The current supply is 0")),(0,o.kt)("h2",{id:"buy-tokens"},"Buy Tokens"),(0,o.kt)("p",null,"Let's generate another address and use it to receive the purchased tokens:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"scli getnewaddress\nsgMR2N4ANuswodFh8T4gYMD3a3VNAd11Jt\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"scli gethexaddress sgMR2N4ANuswodFh8T4gYMD3a3VNAd11Jt\nfa0775ed07771e390c5a3bd2f00cef05bc4185f2\n")),(0,o.kt)("p",null,"Now, spend 1 sbit to buy tokens (geting 100 tokens in return):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js buy fa0775ed07771e390c5a3bd2f00cef05bc4185f2 1\n")),(0,o.kt)("p",null,"After the tx confirms, the token's supply should have incremented by 100:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js info\n\nsupply cap: 100000000.00000000\nsales cap: 40000000.00000000\ncurrent token supply: 100.00000000\ntokens sold: 100.00000000\n")),(0,o.kt)("p",null,"We can also check that the particular address we bought the tokens for have received the correct balance:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js balanceOf fa0775ed07771e390c5a3bd2f00cef05bc4185f2\n100.00000000\n")))}m.isMDXComponent=!0}}]);