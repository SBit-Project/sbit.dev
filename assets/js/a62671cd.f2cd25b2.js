"use strict";(self.webpackChunksbit_website=self.webpackChunksbit_website||[]).push([[2036],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=a.createContext({}),c=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,k=u["".concat(i,".").concat(m)]||u[m]||p[m]||r;return t?a.createElement(k,s(s({ref:n},d),{},{components:t})):a.createElement(k,s({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,s=new Array(r);s[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var c=2;c<r;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5025:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var a=t(7462),o=t(3366),r=(t(7294),t(3905)),s=["components"],l={title:"SRC20 With SBitJS",description:"SRC20 With SBitJS",keywords:["sbit","bitcoin","blockchain","ethereum","docker","network"],sidebar_position:2},i=void 0,c={unversionedId:"Smart-Contract/SRC20/src20-js",id:"Smart-Contract/SRC20/src20-js",title:"SRC20 With SBitJS",description:"SRC20 With SBitJS",source:"@site/docs/Smart-Contract/SRC20/src20-js.md",sourceDirName:"Smart-Contract/SRC20",slug:"/Smart-Contract/SRC20/src20-js",permalink:"/sbit.dev/docs/Smart-Contract/SRC20/src20-js",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"SRC20 With SBitJS",description:"SRC20 With SBitJS",keywords:["sbit","bitcoin","blockchain","ethereum","docker","network"],sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"SRC20 Token",permalink:"/sbit.dev/docs/Smart-Contract/SRC20/src20-token"},next:{title:"SRC20 DApp",permalink:"/sbit.dev/docs/Smart-Contract/SRC20/src20-dapp"}},d={},p=[{value:"Note On NodeJS Compatibility",id:"note-on-nodejs-compatibility",level:2},{value:"Note on Code Editor",id:"note-on-code-editor",level:2},{value:"Setup The SRC20 CLI Project",id:"setup-the-src20-cli-project",level:2},{value:"Getting The Total Supply",id:"getting-the-total-supply",level:2},{value:"Calling A Read-Only Method",id:"calling-a-read-only-method",level:2},{value:"Call Method With Arguments",id:"call-method-with-arguments",level:2},{value:"Send VS Call",id:"send-vs-call",level:2},{value:"Mint Tokens With Send",id:"mint-tokens-with-send",level:2},{value:"Token Transfer",id:"token-transfer",level:2},{value:"Observing Contract Events",id:"observing-contract-events",level:2}],u={toc:p};function m(e){var n=e.components,t=(0,o.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In this chapter we will use ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/SBit-Project/sbitjs"},"sbitjs")," to build a NodeJS CLI tool to interact with the SRC20 ",(0,r.kt)("a",{parentName:"p",href:"src20-token"},"token we deployed previously"),"."),(0,r.kt)("p",null,"You can download the project code: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/SBit-Project/Docs-testToken-sbitjs-cli"},"SBit-Project/Docs-testToken-sbitjs-cli"),"."),(0,r.kt)("p",null,"For now, sbitjs relies on ",(0,r.kt)("inlineCode",{parentName:"p"},"sbitd"),"'s RPC service, so make sure that the docker container is running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -it --rm \\\n  --name myapp \\\n  -v `pwd`:/dapp \\\n  -p 9899:9899 \\\n  -p 9888:9888 \\\n  -p 22002:22002 \\\n  sbitproject/sbitportal\n")),(0,r.kt)("h2",{id:"note-on-nodejs-compatibility"},"Note On NodeJS Compatibility"),(0,r.kt)("p",null,"You'll need a version of ",(0,r.kt)("inlineCode",{parentName:"p"},"node")," that supports ",(0,r.kt)("a",{parentName:"p",href:"https://blog.risingstack.com/mastering-async-await-in-nodejs/"},"async/await"),". You should be ok if your version number is greater than 8."),(0,r.kt)("p",null,"My version is 8.6 (nothing special about this version...):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node --version\n\nv16.14.0\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"I recommend that you download the ",(0,r.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/"},"Long Term Support")," "))),(0,r.kt)("p",null,"You can test whether async/await is supported or not by entering into the node REPL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node\n")),(0,r.kt)("p",null,"Then create an async function:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"> async () => { }\n[AsyncFunction]\n")),(0,r.kt)("h2",{id:"note-on-code-editor"},"Note on Code Editor"),(0,r.kt)("p",null,"For modern JavaScript development, you really owe it to yourself to try ",(0,r.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/"},"VSCode"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"sbitjs")," comes with static type definitions for its API, and with VSCode you get some of the most useful IDE features (e.g. type-accurate autocomplete) without the UX bloat:"),(0,r.kt)("h2",{id:"setup-the-src20-cli-project"},"Setup The SRC20 CLI Project"),(0,r.kt)("p",null,"Let's clone the NodeJS project to the directory ",(0,r.kt)("inlineCode",{parentName:"p"},"mytoken-js"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/SBit-Project/Docs-testToken-sbitjs-cli.git mytoken-js\n")),(0,r.kt)("p",null,"The project dependencies are listed in ",(0,r.kt)("inlineCode",{parentName:"p"},"package.json"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  ...\n\n  "dependencies": {\n    "minimist": "^1.2.0",\n    "ora": "^1.3.0",\n    "sbitjs": "^1.4.1"\n  }\n}\n')),(0,r.kt)("p",null,"Install these dependencies:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm install\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Or ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn install")," if you prefer that. See: ",(0,r.kt)("a",{parentName:"p",href:"https://yarnpkg.com/en/docs/install"},"https://yarnpkg.com/en/docs/install"))),(0,r.kt)("h2",{id:"getting-the-total-supply"},"Getting The Total Supply"),(0,r.kt)("p",null,"Let's try to get the token's total supply. Run the script index.js"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js supply\n\nError: Cannot find module './solar.json'\n")),(0,r.kt)("p",null,"Oops, the script needs to load information about the contracts you have deployed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// Load deployment information generated by solar\nconst repo = require("./solar.json")\n\n// Contract needs the contract address, owner address, and ABI.\nconst myToken = new Contract(rpc, repo.contracts[\n  "zeppelin-solidity/contracts/token/CappedToken.sol"\n])\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"require")," function loads ",(0,r.kt)("inlineCode",{parentName:"li"},"solar.json")," as a JavaScript object.")),(0,r.kt)("p",null,"You should link (or copy) ",(0,r.kt)("inlineCode",{parentName:"p"},"solar.development.json")," generated in the previous chapter to the project directory as ",(0,r.kt)("inlineCode",{parentName:"p"},"solar.json"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"ln -s ~/sbitbook/examples/mytoken/solar.development.json solar.json\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"See an example ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/SBit-Project/Docs-testToken-sbitjs-cli/blob/master/solar.development.json.example"},"solar.development.json")," file")),(0,r.kt)("p",null,"Now try again:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js supply\n\nsupply 14000\n")),(0,r.kt)("p",null,"Yay it works (hopefully)."),(0,r.kt)("h2",{id:"calling-a-read-only-method"},"Calling A Read-Only Method"),(0,r.kt)("p",null,"The Solidity method we called is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"function totalSupply() public view returns(uint256)\n")),(0,r.kt)("p",null,"The ABI definition (loaded from ",(0,r.kt)("inlineCode",{parentName:"p"},"solar.json"),") is:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n  "name": "totalSupply",\n  "type": "function",\n  "payable": false,\n  "inputs": [],\n  "outputs": [\n    {\n      "name": "",\n      "type": "uint256",\n      "indexed": false\n    }\n  ],\n  "constant": true,\n  "anonymous": false\n}\n')),(0,r.kt)("p",null,"And to call this method using JavaScript:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'// const myToken = new Contract( ... )\n\nasync function totalSupply() {\n  const result = await myToken.call("totalSupply")\n\n  // supply is a BigNumber instance (see: bn.js)\n  const supply = result.outputs[0]\n\n  console.log("supply", supply.toNumber())\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'myToken.call("totalSupply")')," returns a ",(0,r.kt)("a",{parentName:"li",href:"https://developers.google.com/web/fundamentals/primers/promises"},"Promise"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"await")," is a syntatic sugar to that waits for the asynchronous computation, then returns the result."),(0,r.kt)("li",{parentName:"ul"},"Solidity numbers (int, uint, etc.) are represented in JavaScript using ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/indutny/bn.js/"},"BigNumber"),".")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"result")," object contains other useful information aside from the returned values."),(0,r.kt)("p",null,"Do ",(0,r.kt)("inlineCode",{parentName:"p"},"console.log(result)")," to print it out:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{ address: 'a778c05f1d0f70f1133f4bbf78c1a9a7bf84aed3',\n  executionResult:\n   { gasUsed: 21689,\n     excepted: 'None',\n     newAddress: 'a778c05f1d0f70f1133f4bbf78c1a9a7bf84aed3',\n     output: '00000000000000000000000000000000000000000000000000000000000036b0',\n     codeDeposit: 0,\n     gasRefunded: 0,\n     depositSize: 0,\n     gasForDeposit: 0 },\n  transactionReceipt:\n   { stateRoot: '5a0d9cd5df18165c75755f4345ca81da94f9247c1c031171fd6e2ce1a368844c',\n     gasUsed: 21689,\n     bloom: '00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',\n     log: [] },\n  outputs: [ <BN: 36b0> ] }\n")),(0,r.kt)("p",null,"If you hover your mouse cursor over the ",(0,r.kt)("inlineCode",{parentName:"p"},"result")," variable, you should see that its type is ",(0,r.kt)("inlineCode",{parentName:"p"},"IContractCallDecodedResult"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"export interface IContractCallDecodedResult extends IRPCCallContractResult {\n    outputs: any[];\n}\n\nexport interface IRPCCallContractResult {\n    address: string;\n    executionResult: IExecutionResult;\n    transactionReceipt: {\n        stateRoot: string;\n        gasUsed: string;\n        bloom: string;\n        log: any[];\n    };\n}\n\nexport interface IExecutionResult {\n    gasUsed: number;\n    excepted: string;\n    newAddress: string;\n    output: string;\n    codeDeposit: number;\n    gasRefunded: number;\n    depositSize: number;\n    gasForDeposit: number;\n}\n")),(0,r.kt)("h2",{id:"call-method-with-arguments"},"Call Method With Arguments"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"balance")," subcommand checks how many tokens an account has:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js balance dcd32b87270aeb980333213da2549c9907e09e94\n\nbalance: 13700\n")),(0,r.kt)("p",null,"The JavaScript code that implements this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function balanceOf(owner) {\n  const res = await myToken.call("balanceOf", [owner])\n\n  // balance is a BigNumber instance (see: bn.js)\n  const balance = res.outputs[0]\n\n  console.log(`balance:`,  balance.toNumber())\n}\n')),(0,r.kt)("p",null,"The arguments to ",(0,r.kt)("inlineCode",{parentName:"p"},"balanceOf")," are passed in as an array."),(0,r.kt)("h2",{id:"send-vs-call"},"Send VS Call"),(0,r.kt)("p",null,"Confusingly, there are two ways to invoke a method: ",(0,r.kt)("inlineCode",{parentName:"p"},"send")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"call"),". These two names are inherited from Ethereum. A more descriptive way to name them is perhaps to call ",(0,r.kt)("inlineCode",{parentName:"p"},"send"),' "commit" and ',(0,r.kt)("inlineCode",{parentName:"p"},"call"),' "query".'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"call"),' (or "query"): executes contract code on your own local ',(0,r.kt)("inlineCode",{parentName:"li"},"sbitd"),' node as a "simulation", returning results, but not changing the blockchain. This is free.'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"send"),' (or "commit"): creates an actual transaction that would execute code globally on the network, changing the blockchain. This costs gas.')),(0,r.kt)("p",null,"Next, we are going to mint some new tokens using sbitjs. And because minting token changes the blockchain, we'll use ",(0,r.kt)("inlineCode",{parentName:"p"},"send"),"."),(0,r.kt)("h2",{id:"mint-tokens-with-send"},"Mint Tokens With Send"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"mint")," command creates new tokens by using ",(0,r.kt)("inlineCode",{parentName:"p"},"send")," to create a new transaction. Then it waits for that transaction to confirm:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"node index.js mint dcd32b87270aeb980333213da2549c9907e09e94 10000\n\nmint tx: 469d0e6a1e1a421c84cd009b983fc153aa5db7da26fa1f89837f2731fa75586c\n{ amount: 0,\n  fee: -0.081064,\n  confirmations: 0,\n  trusted: true,\n  txid: '469d0e6a1e1a421c84cd009b983fc153aa5db7da26fa1f89837f2731fa75586c',\n  walletconflicts: [],\n  time: 1514442911,\n  timereceived: 1514442911,\n  'bip125-replaceable': 'no',\n  details:\n   [ { account: '',\n       category: 'send',\n       amount: 0,\n       vout: 0,\n       fee: -0.081064,\n       abandoned: false } ],\n  hex: '02000000014d195e5308764e1f64236c64b8975030dd8b8815d7cfa88ee838c029e64fa03f0200000047463043022052a137063b24e74c3953891230dae739ae3adfa2144c91805de4e46ae7c4b152021f0ccdf1b3e4dd86de7777f437447dd147955e9e112c2607bfd67ddc4e7d6e2001feffffff02000000000000000063010403400d0301284440c10f19000000000000000000000000dcd32b87270aeb980333213da2549c9907e09e94000000000000000000000000000000000000000000000000000000000000271014a778c05f1d0f70f1133f4bbf78c1a9a7bf84aed3c2606ecea8d1010000\n1976a914dcd32b87270aeb980333213da2549c9907e09e9488acc3080000',\n  method: 'mint',\n  confirm: [Function: confirm] }\n\u2714 confirm mint\n")),(0,r.kt)("p",null,"We should see that the balance had increased:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js balance dcd32b87270aeb980333213da2549c9907e09e94\n\nbalance: 23700\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"mint")," function source code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function mint(toAddr, amount) {\n  const tx = await myToken.send("mint", [toAddr, amount])\n\n  console.log("mint tx:", tx.txid)\n  console.log(tx)\n\n  await tx.confirm(1)\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tx")," is the transaction submitted."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tx.confirm(1)")," is a Promise that returns when there is one confirmation for the transaction.")),(0,r.kt)("h2",{id:"token-transfer"},"Token Transfer"),(0,r.kt)("p",null,"Let's transfer tokens from ",(0,r.kt)("inlineCode",{parentName:"p"},"dcd32...9e94")," to another account. The contract's ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer")," method takes two arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_to")," address is the receiver of the tokens."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"_value")," is the amount of tokens to transfer.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function transfer(address _to, uint256 _value) public returns (bool) {\n  require(_to != address(0));\n  require(_value <= balances[msg.sender]);\n\n  // SafeMath.sub will throw if there is not enough balance.\n  balances[msg.sender] = balances[msg.sender].sub(_value);\n  balances[_to] = balances[_to].add(_value);\n  Transfer(msg.sender, _to, _value);\n  return true;\n}\n")),(0,r.kt)("p",null,"Note that the API does not require the ",(0,r.kt)("inlineCode",{parentName:"p"},"_from")," address. It is assumed that ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.sender")," is the source of the token balance to transfer from."),(0,r.kt)("p",null,"Ah, ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.sender"),", our old nemesis."),(0,r.kt)("p",null,"As we've learned in ",(0,r.kt)("a",{parentName:"p",href:"src20-token#the-owner-address"},"The Owner UTXO Address"),', SBIT doesn\'t really have the idea of an "account". The ',(0,r.kt)("inlineCode",{parentName:"p"},"msg.sender")," is the address of whatever UTXO that was used to pay for the transaction."),(0,r.kt)("p",null,"To act as ",(0,r.kt)("inlineCode",{parentName:"p"},"dcb3...9e94"),", we need to explicitly specify an UTXO that has the same address. We can do this by using the ",(0,r.kt)("inlineCode",{parentName:"p"},"senderAddress")," option."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function transfer(fromAddr, toAddr, amount) {\n  const tx = await myToken.send("transfer", [toAddr, amount], {\n    senderAddress: fromAddr,\n  })\n\n  console.log("transfer tx:", tx.txid)\n  console.log(tx)\n\n  // or: await tx.confirm(1)\n  const confirmation = tx.confirm(1)\n  ora.promise(confirmation, "confirm transfer")\n  await confirmation\n}\n')),(0,r.kt)("p",null,"In the above code, the third argument of ",(0,r.kt)("inlineCode",{parentName:"p"},"send")," allows you to specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.sender"),"."),(0,r.kt)("p",null,"There are other options you can specify for send. The full type definition is ",(0,r.kt)("inlineCode",{parentName:"p"},"IContractSendRequestOptions"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"export interface IContractSendRequestOptions {\n  /**\n   * The amount in SBIT to send. eg 0.1, default: 0\n   */\n  amount?: number | string\n\n  /**\n   * gasLimit, default: 200000, max: 40000000\n   */\n  gasLimit?: number\n\n  /**\n   * SBit price per gas unit, default: 0.00000001, min:0.00000001\n   */\n  gasPrice?: number | string\n\n  /**\n   * The quantum address that will be used as sender.\n   */\n  senderAddress?: string\n}\n")),(0,r.kt)("p",null,"To test ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer"),", let's generate a new receiver address, and convert it to hex:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"scli getnewaddress\nsXuvswhQ9Vjza8AFj1vmUL4N531CDVoWsz\n\nscli gethexaddress sXuvswhQ9Vjza8AFj1vmUL4N531CDVoWsz\n9d748f98e65c6875dbed7bfb6ffbeca426ff9cc6\n")),(0,r.kt)("p",null,"To transfer 100 tokens from ",(0,r.kt)("inlineCode",{parentName:"p"},"dcb3...9e94"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js transfer \\\n sdgznat81MfTHZUrQrLZDZteAx212X4Wjj \\\n 9d748f98e65c6875dbed7bfb6ffbeca426ff9cc6 \\\n 100\n\ntransfer tx: a1ba017b3974b98bf9c8edc824c3abc0ce17678a14e7cfac94b5900a290bdd07\n\u2714 confirm transfer\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("blockquote",{parentName:"div"},(0,r.kt)("p",{parentName:"blockquote"},"Note that we MUST specify the senderAddress using base58 address format. We'll fix this in the future.")))),(0,r.kt)("p",null,"We can then verify that ",(0,r.kt)("inlineCode",{parentName:"p"},"9d74...9cc6")," had indeed received the tokens:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js balance 9d748f98e65c6875dbed7bfb6ffbeca426ff9cc6\n\nbalance: 100\n")),(0,r.kt)("p",null,"And that the origin account's balance decremented by 100:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js balance dcd32b87270aeb980333213da2549c9907e09e94\n\nbalance: 23600\n")),(0,r.kt)("h2",{id:"observing-contract-events"},"Observing Contract Events"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"CappedToken")," contract defines a few events. The ",(0,r.kt)("inlineCode",{parentName:"p"},"Transfer")," event is emitted whenever fund is moved from one account to another (also when minting new tokens). The ",(0,r.kt)("inlineCode",{parentName:"p"},"Transfer")," event:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"event Transfer(\n  address indexed from,\n  address indexed to,\n  uint256 value\n);\n")),(0,r.kt)("p",null,"Let's use sbitjs to subscribe to the stream of contract events, so we can react in a timely manner when a transfer occurs. The code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'async function streamEvents() {\n  console.log("Subscribed to contract events")\n  console.log("Ctrl-C to terminate events subscription")\n\n  myToken.onLog((entry) => {\n    console.log(entry)\n  }, { minconf: 1 })\n}\n')),(0,r.kt)("p",null,"Let's see it in action. Launch the ",(0,r.kt)("inlineCode",{parentName:"p"},"events")," subscriber:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js events\n\nSubscribed to contract events\nCtrl-C to terminate events subscription\n")),(0,r.kt)("p",null,"The program hangs there waiting for new events. In another terminal, mint more tokens:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"node index.js mint dcd32b87270aeb980333213da2549c9907e09e94 10000\n\nmint tx: c0e3007178a1b9e05b33e770f7a0e7d084f2d06732658524be042dc0e9864cc4\n")),(0,r.kt)("p",null,"Wait for a bit for confirmations. In the ",(0,r.kt)("inlineCode",{parentName:"p"},"events")," terminal, you should see both ",(0,r.kt)("inlineCode",{parentName:"p"},"Mint")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Transfer")," events printed out:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"{ blockHash: 'd8135a1a0e4cddb82a6912fc7eb2bd7f717b7e85069dc2fa3b8f0f8c02acbd17',\n  blockNumber: 2372,\n  transactionHash: 'c0e3007178a1b9e05b33e770f7a0e7d084f2d06732658524be042dc0e9864cc4',\n  transactionIndex: 2,\n  from: 'dcd32b87270aeb980333213da2549c9907e09e94',\n  to: 'a778c05f1d0f70f1133f4bbf78c1a9a7bf84aed3',\n  cumulativeGasUsed: 39306,\n  gasUsed: 39306,\n  contractAddress: 'a778c05f1d0f70f1133f4bbf78c1a9a7bf84aed3',\n  topics:\n   [ '0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885',\n     '000000000000000000000000dcd32b87270aeb980333213da2549c9907e09e94' ],\n  data: '0000000000000000000000000000000000000000000000000000000000002710',\n  event:\n   { type: 'Mint',\n     to: '0xdcd32b87270aeb980333213da2549c9907e09e94',\n     amount: <BN: 2710> } }\n{ blockHash: 'd8135a1a0e4cddb82a6912fc7eb2bd7f717b7e85069dc2fa3b8f0f8c02acbd17',\n  blockNumber: 2372,\n  transactionHash: 'c0e3007178a1b9e05b33e770f7a0e7d084f2d06732658524be042dc0e9864cc4',\n  transactionIndex: 2,\n  from: 'dcd32b87270aeb980333213da2549c9907e09e94',\n  to: 'a778c05f1d0f70f1133f4bbf78c1a9a7bf84aed3',\n  cumulativeGasUsed: 39306,\n  gasUsed: 39306,\n  contractAddress: 'a778c05f1d0f70f1133f4bbf78c1a9a7bf84aed3',\n  topics:\n   [ 'ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',\n     '0000000000000000000000000000000000000000000000000000000000000000',\n     '000000000000000000000000dcd32b87270aeb980333213da2549c9907e09e94' ],\n  data: '0000000000000000000000000000000000000000000000000000000000002710',\n  event:\n   { type: 'Transfer',\n     from: '0x0000000000000000000000000000000000000000',\n     to: '0xdcd32b87270aeb980333213da2549c9907e09e94',\n     value: <BN: 2710> } }\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If you are running your own sbitd node instead of the provided docker image, you'll need to enable ",(0,r.kt)("inlineCode",{parentName:"p"},"-logevents")," for events logging to work.")),(0,r.kt)("h1",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"In this chapter we've developed a simple NodeJS CLI tool to interact with an SRC20 contract."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"sbitjs is a Promise-based API. Use async/await to write clean asynchronous code."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"call"),' is like "query", ',(0,r.kt)("inlineCode",{parentName:"li"},"send"),' is like "commit".'),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"senderAddress")," to in ",(0,r.kt)("inlineCode",{parentName:"li"},"call")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"send")," to specify the ",(0,r.kt)("inlineCode",{parentName:"li"},"msg.owner"),".")),(0,r.kt)("p",null,"Now that you know how to use sbitjs, you are ready to build a DApp, and be on your way to fame and riches!"))}m.isMDXComponent=!0}}]);